(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{634:function(t,a,s){"use strict";s.r(a);var n=s(5),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"网页被解析的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网页被解析的过程"}},[t._v("#")]),t._v(" 网页被解析的过程")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("大家有没有深入思考过：一个网页 URL 从输入到浏览器中，到显示经历过怎么样的解析过程呢？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20220531155358034.png",alt:"image-20220531155358034"}})])]),t._v(" "),s("li",[s("p",[t._v("要想深入理解下载的过程，我们还要先理解，一个 index.html 被下载下来后是如何被解析和显示在浏览器上的.")])]),t._v(" "),s("li",[s("p",[t._v("步骤")]),t._v(" "),s("ol",[s("li",[t._v("浏览器输入框判断输入内容")]),t._v(" "),s("li",[t._v("如果是 ip 或者是域名则开始 dns 解析")]),t._v(" "),s("li",[t._v("dns 解析完成获取到网站 ip 然后开始进行三次握手")]),t._v(" "),s("li",[t._v("握手完毕开始交流数据")]),t._v(" "),s("li",[t._v("浏览器开始下载 html css js 等文件\n"),s("ol",[s("li",[t._v("先加载 Dom,然后再渲染上 css")]),t._v(" "),s("li",[t._v("中途遇到 js 会停止渲染先加载 js")]),t._v(" "),s("li",[t._v("如果遇到 defer 属性则会先下载然后等待 Dom 加载完毕再运行 js")])])]),t._v(" "),s("li",[t._v("如果遇到 async 属性则会直接下载同时加载 Dom,下载完毕即指向(不推荐)")]),t._v(" "),s("li",[t._v("数据下载完毕,四次挥手")]),t._v(" "),s("li",[t._v("心跳包(即时通讯)")])])])]),t._v(" "),s("h2",{attrs:{id:"浏览器内核"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[t._v("#")]),t._v(" 浏览器内核")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("常见的浏览器内核有")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Trident （ 三叉戟）：IE、360 安全浏览器、搜狗高速浏览器、百度浏览器、UC 浏览器；")])]),t._v(" "),s("li",[s("p",[t._v("Gecko（ 壁虎） ：Mozilla Firefox；")])]),t._v(" "),s("li",[s("p",[t._v("Presto（急板乐曲）-> Blink （眨眼）：Opera")])]),t._v(" "),s("li",[s("p",[t._v("Webkit ：Safari、360 极速浏览器、搜狗高速浏览器、移动端浏览器（Android、iOS）")])]),t._v(" "),s("li",[s("p",[t._v("Webkit -> Blink ：Google Chrome，Edge")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20220531160210607.png",alt:"image-20220531160210607"}})])])])]),t._v(" "),s("li",[s("p",[t._v("我们经常说的浏览器内核指的是浏览器的排版引擎：")]),t._v(" "),s("ul",[s("li",[t._v("排版引擎（layout engine），也称为浏览器引擎（browser engine）、页面渲染引擎（rendering engine）或样版引擎。")])])]),t._v(" "),s("li",[s("p",[t._v("也就是一个网页下载下来后，就是由我们的渲染引擎来帮助我们解析的。")])])]),t._v(" "),s("h2",{attrs:{id:"渲染引擎如何解析页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎如何解析页面"}},[t._v("#")]),t._v(" 渲染引擎如何解析页面")]),t._v(" "),s("h3",{attrs:{id:"渲染页面的简洁流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染页面的简洁流程"}},[t._v("#")]),t._v(" 渲染页面的简洁流程")]),t._v(" "),s("ul",[s("li",[t._v("渲染引擎在拿到一个页面后，如何解析整个页面并且最终呈现出我们的网页呢？")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20220531160308166.png",alt:"image-20220531160308166"}})]),t._v(" "),s("h3",{attrs:{id:"渲染页面的详细流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染页面的详细流程"}},[t._v("#")]),t._v(" 渲染页面的详细流程")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("更详细的解析过程如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20220531160400070.png",alt:"image-20220531160400070"}})])]),t._v(" "),s("li",[s("p",[t._v("https://www.html5rocks.com/en/tutorials/internals/howbrowserswork")])])]),t._v(" "),s("h4",{attrs:{id:"解析一-html-解析过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析一-html-解析过程"}},[t._v("#")]),t._v(" 解析一：HTML 解析过程")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("因为默认情况下服务器会给浏览器返回 index.html 文件，所以解析 HTML 是所有步骤的开始：")])]),t._v(" "),s("li",[s("p",[t._v("解析 HTML，会构建 DOM Tree：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20220531160425893.png",alt:"image-20220531160425893"}})])])]),t._v(" "),s("h4",{attrs:{id:"解析二-生成-css-规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析二-生成-css-规则"}},[t._v("#")]),t._v(" 解析二 – 生成 CSS 规则")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在解析的过程中，如果遇到 CSS 的 link 元素，那么会由浏览器负责下载对应的 CSS 文件：")]),t._v(" "),s("ul",[s("li",[t._v("注意：下载 CSS 文件是不会影响 DOM 的解析的；")])])]),t._v(" "),s("li",[s("p",[t._v("浏览器下载完 CSS 文件后，就会对 CSS 文件进行解析，解析出对应的规则树：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("我们可以称之为 CSSOM（CSS Object Model，CSS 对象模型）；")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20220531160508902.png",alt:"image-20220531160508902"}})])])])])]),t._v(" "),s("h4",{attrs:{id:"解析三-构建-render-tree-渲染树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析三-构建-render-tree-渲染树"}},[t._v("#")]),t._v(" 解析三 – 构建 Render Tree (渲染树)")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("当有了 DOM Tree 和 CSSOM Tree 后，就可以两个结合来构建 Render Tree 了")])]),t._v(" "),s("li",[s("p",[t._v("注意一：link 元素不会阻塞 DOM Tree 的构建过程，但是会阻塞 Render Tree 的构建过程")]),t._v(" "),s("ul",[s("li",[t._v("这是因为 Render Tree 在构建时，需要对应的 CSSOM Tree；")])])]),t._v(" "),s("li",[s("p",[t._v("注意二：Render Tree 和 DOM Tree 并不是一一对应的关系，比如对于 display 为 none 的元素，压根不会出现在 render tree 中；")])])]),t._v(" "),s("h4",{attrs:{id:"解析四-布局-layout-和绘制-paint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析四-布局-layout-和绘制-paint"}},[t._v("#")]),t._v(" 解析四 – 布局（layout）和绘制（Paint）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第四步是在渲染树（Render Tree）上运行布局（Layout）以计算每个节点的几何体。")]),t._v(" "),s("ul",[s("li",[t._v("渲染树会表示显示哪些节点以及其他样式，但是不表示每个节点的尺寸、位置等信息；")]),t._v(" "),s("li",[t._v("布局是确定呈现树中所有节点的宽度、高度和位置信息；")])])]),t._v(" "),s("li",[s("p",[t._v("第五步是将每个节点绘制（Paint）到屏幕上")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在绘制阶段，浏览器将布局阶段计算的每个 frame 转为屏幕上实际的像素点；")])]),t._v(" "),s("li",[s("p",[t._v("包括将元素的可见部分进行绘制，比如文本、颜色、边框、阴影、替换元素（比如 img）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20220531161003357.png",alt:"image-20220531161003357"}})])])])])]),t._v(" "),s("h2",{attrs:{id:"回流和重绘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回流和重绘"}},[t._v("#")]),t._v(" 回流和重绘")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("理解回流 reflow：（也可以称之为重排）")]),t._v(" "),s("ul",[s("li",[t._v("第一次确定节点的大小和位置，称之为布局（layout）。")]),t._v(" "),s("li",[t._v("之后对节点的大小、位置修改重新计算称之为回流。")])])]),t._v(" "),s("li",[s("p",[t._v("什么情况下引起回流呢？")]),t._v(" "),s("ul",[s("li",[t._v("比如 DOM 结构发生改变（添加新的节点或者移除节点）；")]),t._v(" "),s("li",[t._v("比如改变了布局（修改了 width、height、padding、font-size 等值）")]),t._v(" "),s("li",[t._v("比如窗口 resize（修改了窗口的尺寸等）")]),t._v(" "),s("li",[t._v("比如调用 getComputedStyle 方法获取尺寸、位置信息；")])])]),t._v(" "),s("li",[s("p",[t._v("理解重绘 repaint：")]),t._v(" "),s("ul",[s("li",[t._v("第一次渲染内容称之为绘制（paint）。")]),t._v(" "),s("li",[t._v("之后重新渲染称之为重绘。")])])]),t._v(" "),s("li",[s("p",[t._v("什么情况下会引起重绘呢？")]),t._v(" "),s("ul",[s("li",[t._v("比如修改背景色、文字颜色、边框颜色、样式等；")])])]),t._v(" "),s("li",[s("p",[t._v("回流一定会引起重绘，所以回流是一件很消耗性能的事情。")])]),t._v(" "),s("li",[s("p",[t._v("所以在开发中要尽量避免发生回流：")]),t._v(" "),s("ol",[s("li",[t._v("修改样式时尽量一次性修改")])]),t._v(" "),s("ul",[s("li",[t._v("比如通过 cssText 修改，比如通过添加 class 修改")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("尽量避免频繁的操作 DOM")])]),t._v(" "),s("ul",[s("li",[t._v("我们可以在一个 DocumentFragment 或者父元素中将要操作的 DOM 操作完成，再一次性的操作；")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("尽量避免通过 getComputedStyle 获取尺寸、位置等信息；")]),t._v(" "),s("li",[t._v("对某些元素使用 position 的 absolute 或者 fixed")])]),t._v(" "),s("ul",[s("li",[t._v("并不是不会引起回流，而是开销相对较小，不会对其他元素造成影响。")])])])]),t._v(" "),s("h3",{attrs:{id:"特殊解析-composite-合成-合成层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊解析-composite-合成-合成层"}},[t._v("#")]),t._v(" 特殊解析 – composite 合成(合成层)")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("绘制的过程，可以将布局后的元素绘制到多个合成图层中。")]),t._v(" "),s("ul",[s("li",[t._v("这是浏览器的一种优化手段；")])])]),t._v(" "),s("li",[s("p",[t._v("默认情况下，标准流中的内容都是被绘制在同一个图层（Layer）中的；")])]),t._v(" "),s("li",[s("p",[t._v("而一些特殊的属性，会创建一个新的合成层（ CompositingLayer ），并且新的图层可以利用 GPU 来加速绘制；")]),t._v(" "),s("ul",[s("li",[t._v("因为每个合成层都是单独渲染的；")])])]),t._v(" "),s("li",[s("p",[t._v("那么哪些属性可以形成新的合成层呢？常见的一些属性：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("3D transforms")])]),t._v(" "),s("li",[s("p",[t._v("video、canvas、iframe")])]),t._v(" "),s("li",[s("p",[t._v("opacity 动画转换时；")])]),t._v(" "),s("li",[s("p",[t._v("position: fixed")])]),t._v(" "),s("li",[s("p",[t._v("will-change：一个实验性的属性，提前告诉浏览器元素可能发生哪些变化；")])]),t._v(" "),s("li",[s("p",[t._v("animation 或 transition 设置了 opacity、transform；")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20220531161414903.png",alt:"image-20220531161414903"}})])])])]),t._v(" "),s("li",[s("p",[t._v("分层确实可以提高性能，但是它以内存管理为代价，因此不应作为 web 性能优化策略的一部分过度使用。")])])]),t._v(" "),s("h2",{attrs:{id:"script-元素和页面解析的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script-元素和页面解析的关系"}},[t._v("#")]),t._v(" script 元素和页面解析的关系")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("我们现在已经知道了页面的渲染过程，但是 JavaScript 在哪里呢？")]),t._v(" "),s("ul",[s("li",[t._v("事实上，浏览器在解析 HTML 的过程中，遇到了 script 元素是不能继续构建 DOM 树的；")]),t._v(" "),s("li",[t._v("它会停止继续构建，首先下载 JavaScript 代码，并且执行 JavaScript 的脚本；")]),t._v(" "),s("li",[t._v("只有等到 JavaScript 脚本执行结束后，才会继续解析 HTML，构建 DOM 树；")])])]),t._v(" "),s("li",[s("p",[t._v("为什么要这样做呢？")]),t._v(" "),s("ul",[s("li",[t._v("这是因为 JavaScript 的作用之一就是操作 DOM，并且可以修改 DOM；")]),t._v(" "),s("li",[t._v("如果我们等到 DOM 树构建完成并且渲染再执行 JavaScript，会造成严重的回流和重绘，影响页面的性能；")]),t._v(" "),s("li",[t._v("所以会在遇到 script 元素时，优先下载和执行 JavaScript 代码，再继续构建 DOM 树；")])])]),t._v(" "),s("li",[s("p",[t._v("但是这个也往往会带来新的问题，特别是现代页面开发中：")]),t._v(" "),s("ul",[s("li",[t._v("在目前的开发模式中（比如 Vue、React），脚本往往比 HTML 页面更“重”，处理时间需要更长；")]),t._v(" "),s("li",[t._v("所以会造成页面的解析阻塞，在脚本下载、执行完成之前，用户在界面上什么都看不到；")])])]),t._v(" "),s("li",[s("p",[t._v("为了解决这个问题，script 元素给我们提供了两个属性（attribute）：defer 和 async。")])])]),t._v(" "),s("h3",{attrs:{id:"defer-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defer-属性"}},[t._v("#")]),t._v(" defer 属性")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("defer 属性告诉浏览器不要等待脚本下载，而继续解析 HTML，构建 DOM Tree。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("脚本会由浏览器来进行下载，但是不会阻塞 DOM Tree 的构建过程；")])]),t._v(" "),s("li",[s("p",[t._v("如果脚本提前下载好了，它会等待 DOM Tree 构建完成，在 DOMContentLoaded 事件之前先执行 defer 中的代码；")])])])]),t._v(" "),s("li",[s("p",[t._v("所以 DOMContentLoaded 总是会等待 defer 中的代码先执行完成。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("defer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./js/defer-demo.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListerner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOMContentLoaded"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOMContentLoaded"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("另外多个带 defer 的脚本是可以保持正确的顺序执行的。")])]),t._v(" "),s("li",[s("p",[t._v("从某种角度来说，defer 可以提高页面的性能，并且推荐放到 head 元素中；")])]),t._v(" "),s("li",[s("p",[t._v("注意：defer 仅适用于外部脚本，对于 script 默认内容会被忽略。")])])]),t._v(" "),s("h3",{attrs:{id:"async-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-属性"}},[t._v("#")]),t._v(" async 属性")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("async 特性与 defer 有些类似，它也能够让脚本不阻塞页面。")])]),t._v(" "),s("li",[s("p",[t._v("async 是让一个脚本完全独立的：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("浏览器不会因 async 脚本而阻塞（与 defer 类似）；")])]),t._v(" "),s("li",[s("p",[t._v("async 脚本不能保证顺序，它是独立下载、独立运行，不会等待其他脚本；")])]),t._v(" "),s("li",[s("p",[t._v("async 不会能保证在 DOMContentLoaded 之前或者之后执行；")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListerner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOMContentLoaded"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOMContentLoaded"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./js/async-demo.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])])])]),t._v(" "),s("li",[s("p",[t._v("defer 通常用于需要在文档解析后操作 DOM 的 JavaScript 代码，并且对多个 script 文件有顺序要求的；")])]),t._v(" "),s("li",[s("p",[t._v("async 通常用于独立的脚本，对其他脚本，甚至 DOM 没有依赖的；")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);