(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{659:function(t,a,s){"use strict";s.r(a);var e=s(5),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react-组件化开发进阶"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-组件化开发进阶"}},[t._v("#")]),t._v(" React 组件化开发进阶"),s("a",{attrs:{href:"#react%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E8%BF%9B%E9%98%B6"}},[t._v("#")])]),t._v(" "),s("h2",{attrs:{id:"react-性能优化-scu"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-性能优化-scu"}},[t._v("#")]),t._v(" React 性能优化 SCU"),s("a",{attrs:{href:"#react%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96scu"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"react-更新机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-更新机制"}},[t._v("#")]),t._v(" React 更新机制"),s("a",{attrs:{href:"#react%E6%9B%B4%E6%96%B0%E6%9C%BA%E5%88%B6"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("我们在前面已经学习 React 的渲染流程：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://codermjjh.cn/assets/image-20221101225700875.1985ed22.png",alt:"image-20221101225700875"}})])]),t._v(" "),s("li",[s("p",[t._v("那么 React 的更新流程呢？")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://codermjjh.cn/assets/image-20221101230925930.019c81b8.png",alt:"image-20221101230925930"}})]),t._v(" "),s("h3",{attrs:{id:"react-的更新-流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-的更新-流程"}},[t._v("#")]),t._v(" React 的更新 流程"),s("a",{attrs:{href:"#react%E7%9A%84%E6%9B%B4%E6%96%B0-%E6%B5%81%E7%A8%8B"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("React 在 props 或 state 发生改变时，会调用 React 的 render 方法，会创建一颗不同的树。")]),t._v(" "),s("li",[t._v("React 需要基于这两颗不同的树之间的差别来判断如何有效的更新 UI：\n"),s("ul",[s("li",[t._v("如果一棵树参考另外一棵树进行完全比较更新，那么即使是最先进的算法，该算法的复杂程度为 O(n2)，其中 n 是树中元素的数量；")]),t._v(" "),s("li",[t._v("https://grfia.dlsi.ua.es/ml/algorithms/references/editsurvey_bille.pdf；")]),t._v(" "),s("li",[t._v("如果在 React 中使用了该算法，那么展示 1000 个元素所需要执行的计算量将在十亿的量级范围；")]),t._v(" "),s("li",[t._v("这个开销太过昂贵了，React 的更新性能会变得非常低效；")])])]),t._v(" "),s("li",[t._v("于是，React 对这个算法进行了优化，将其优化成了 O(n)，如何优化的呢？\n"),s("ul",[s("li",[t._v("同层节点之间相互比较，不会垮节点比较；")]),t._v(" "),s("li",[t._v("不同类型的节点，产生不同的树结构；")]),t._v(" "),s("li",[t._v("开发中，可以通过 key 来指定哪些节点在不同的渲染下保持稳定；")])])])]),t._v(" "),s("h3",{attrs:{id:"keys-的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keys-的优化"}},[t._v("#")]),t._v(" keys 的优化"),s("a",{attrs:{href:"#keys%E7%9A%84%E4%BC%98%E5%8C%96"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("我们在前面遍历列表时，总是会提示一个警告，让我们加入一个 key 属性：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://codermjjh.cn/assets/image-20221101215645282.8c9e3b7a.png",alt:"image-20221101215645282"}})])]),t._v(" "),s("li",[s("p",[t._v("方式一：在最后位置插入数据")]),t._v(" "),s("ul",[s("li",[t._v("这种情况，有无 key 意义并不大")])])]),t._v(" "),s("li",[s("p",[t._v("方式二：在前面插入数据")]),t._v(" "),s("ul",[s("li",[t._v("这种做法，在没有 key 的情况下，所有的 li 都需要进行修改；")])])]),t._v(" "),s("li",[s("p",[t._v("当子元素(这里的 li)拥有 key 时，React 使用 key 来匹配原有树上的子元素以及最新树上的子元素：")]),t._v(" "),s("ul",[s("li",[t._v("在下面这种场景下，key 为 111 和 222 的元素仅仅进行位移，不需要进行任何的修改；")]),t._v(" "),s("li",[t._v("将 key 为 333 的元素插入到最前面的位置即可；")])])]),t._v(" "),s("li",[s("p",[t._v("key 的注意事项：")]),t._v(" "),s("ul",[s("li",[t._v("key 应该是唯一的；")]),t._v(" "),s("li",[t._v("key 不要使用随机数（随机数在下一次 render 时，会重新生成一个数字）；")]),t._v(" "),s("li",[t._v("使用 index 作为 key，对性能是没有优化的；\n"),s("ul",[s("li",[t._v("因为修改 index 会影响之后元素的 index")]),t._v(" "),s("li",[t._v("要保证 key 是唯一的")])])])])])]),t._v(" "),s("h3",{attrs:{id:"render-函数被调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render-函数被调用"}},[t._v("#")]),t._v(" render 函数被调用"),s("a",{attrs:{href:"#render%E5%87%BD%E6%95%B0%E8%A2%AB%E8%B0%83%E7%94%A8"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("我们使用之前的一个嵌套案例：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://codermjjh.cn/assets/image-20221101215707882.0fca9bae.png",alt:"image-20221101215707882"}})]),t._v(" "),s("ul",[s("li",[t._v("在 App 中，我们增加了一个计数器的代码；")]),t._v(" "),s("li",[t._v("当点击+1 时，会重新调用 App 的 render 函数；")]),t._v(" "),s("li",[t._v("而当 App 的 render 函数被调用时，所有的子组件的 render 函数都会被重新调用；")])])]),t._v(" "),s("li",[s("p",[t._v("那么，我们可以思考一下，在以后的开发中，我们只要是修改了 App 中的数据，所有的组件都需要重新 render，进行 diff 算法，性能必然是很低的：")]),t._v(" "),s("ul",[s("li",[t._v("事实上，很多的组件没有必须要重新 render；")]),t._v(" "),s("li",[t._v("它们调用 render 应该有一个前提，就是依赖的数据（state、 props）发生改变时，再调用自己的 render 方法；")])])]),t._v(" "),s("li",[s("p",[t._v("如何来控制 render 方法是否被调用呢？")]),t._v(" "),s("ul",[s("li",[t._v("通过 shouldComponentUpdate 方法即可；")])])])]),t._v(" "),s("h3",{attrs:{id:"shouldcomponentupdate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate"}},[t._v("#")]),t._v(" shouldComponentUpdate"),s("a",{attrs:{href:"#shouldcomponentupdate"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("React 给我们提供了一个生命周期方法 shouldComponentUpdate（很多时候，我们简称为 SCU），这个方法接受参数，并且需要有 返回值：")]),t._v(" "),s("li",[t._v("该方法有两个参数：\n"),s("ul",[s("li",[t._v("参数一：nextProps 修改之后，最新的 props 属性")]),t._v(" "),s("li",[t._v("参数二：nextState 修改之后，最新的 state 属性")])])]),t._v(" "),s("li",[t._v("该方法返回值是一个 boolean 类型：\n"),s("ul",[s("li",[t._v("返回值为 true，那么就需要调用 render 方法；")]),t._v(" "),s("li",[t._v("返回值为 false，那么久不需要调用 render 方法；")]),t._v(" "),s("li",[t._v("默认返回的是 true，也就是只要 state 发生改变，就会调用 render 方法；")])])]),t._v(" "),s("li",[t._v("比如我们在 App 中增加一个 message 属性：\n"),s("ul",[s("li",[t._v("jsx 中并没有依赖这个 message，那么它的改变不应该引起重新渲染；")]),t._v(" "),s("li",[t._v("但是因为 render 监听到 state 的改变，就会重新 render，所以最后 render 方法还是被重新调用了；")])])])]),t._v(" "),s("p",[t._v("jsx")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("shouldComponentUpdate(newProps, nextState){\n\t// 自己对比state是否发生改变,this.state和nextState\n  if(this.props.message !== newProps.message){\n    return trur\n  }\n  return false\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"purecomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#purecomponent"}},[t._v("#")]),t._v(" PureComponent"),s("a",{attrs:{href:"#purecomponent"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("如果所有的类，我们都需要手动来实现 shouldComponentUpdate，那么会给我们开发者增加非常多的工作量。\n"),s("ul",[s("li",[t._v("我们来设想一下 shouldComponentUpdate 中的各种判断的目的是什么？")]),t._v(" "),s("li",[t._v("props 或者 state 中的数据是否发生了改变，来决定 shouldComponentUpdate 返回 true 或者 false；")])])]),t._v(" "),s("li",[t._v("事实上 React 已经考虑到了这一点，所以 React 已经默认帮我们实现好了，如何实现呢？\n"),s("ul",[s("li",[t._v("将 class 继承自 PureComponent。")])])])]),t._v(" "),s("p",[t._v("jsx")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import { PureComponent } from 'react'\nexport class App extends PureComponent {\n  ...\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://codermjjh.cn/assets/image-20221102000925538.27f3bf38.png",alt:"image-20221102000925538"}})]),t._v(" "),s("h3",{attrs:{id:"shallowequal-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shallowequal-方法"}},[t._v("#")]),t._v(" shallowEqual 方法"),s("a",{attrs:{href:"#shallowequal%E6%96%B9%E6%B3%95"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("这个方法中，调用 !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)，这个 shallowEqual 就是进行浅层比较：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://codermjjh.cn/assets/image-20221102000644918.d467de96.png",alt:"image-20221102000644918"}})])])]),t._v(" "),s("h3",{attrs:{id:"高阶组件-memo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件-memo"}},[t._v("#")]),t._v(" 高阶组件 memo"),s("a",{attrs:{href:"#%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6memo"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("目前我们是针对类组件可以使用 PureComponent，那么函数式组件呢？\n"),s("ul",[s("li",[t._v("事实上函数式组件我们在 props 没有改变时，也是不希望其重新渲染其 DOM 树结构的")])])]),t._v(" "),s("li",[t._v("我们需要使用一个高阶组件 memo：\n"),s("ul",[s("li",[t._v("我们将之前的 Header、Banner、ProductList 都通过 memo 函数进行一层包裹；")]),t._v(" "),s("li",[t._v("Footer 没有使用 memo 函数进行包裹；")]),t._v(" "),s("li",[t._v("最终的效果是，当 counter 发生改变时，Header、Banner、ProductList 的函数不会重新执行；")]),t._v(" "),s("li",[t._v("而 Footer 的函数会被重新执行；")])])])]),t._v(" "),s("h3",{attrs:{id:"不可变数据的力量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不可变数据的力量"}},[t._v("#")]),t._v(" 不可变数据的力量"),s("a",{attrs:{href:"#%E4%B8%8D%E5%8F%AF%E5%8F%98%E6%95%B0%E6%8D%AE%E7%9A%84%E5%8A%9B%E9%87%8F"}},[t._v("#")])]),t._v(" "),s("h2",{attrs:{id:"获取-dom-方式-refs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取-dom-方式-refs"}},[t._v("#")]),t._v(" 获取 DOM 方式 refs"),s("a",{attrs:{href:"#%E8%8E%B7%E5%8F%96dom%E6%96%B9%E5%BC%8Frefs"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"如何使用-ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用-ref"}},[t._v("#")]),t._v(" 如何使用 ref"),s("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8ref"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("在 React 的开发模式中，通常情况下不需要、也不建议直接操作 DOM 原生，但是某些特殊的情况，确实需要获取到 DOM 进行某些操作：\n"),s("ul",[s("li",[t._v("管理焦点，文本选择或媒体播放；")]),t._v(" "),s("li",[t._v("触发强制动画；")]),t._v(" "),s("li",[t._v("集成第三方 DOM 库；")]),t._v(" "),s("li",[t._v("我们可以通过 refs 获取 DOM；")])])]),t._v(" "),s("li",[t._v("如何创建 refs 来获取对应的 DOM 呢？目前有三种方式：")]),t._v(" "),s("li",[t._v("方式一：传入字符串\n"),s("ul",[s("li",[t._v("使用时通过 this.refs.传入的字符串格式获取对应的元素；")])])]),t._v(" "),s("li",[t._v("方式二：传入一个对象\n"),s("ul",[s("li",[t._v("对象是通过 React.createRef() 方式创建出来的；")]),t._v(" "),s("li",[t._v("使用时获取到创建的对象其中有一个 current 属性就是对应的元素；")])])]),t._v(" "),s("li",[t._v("方式三：传入一个函数\n"),s("ul",[s("li",[t._v("该函数会在 DOM 被挂载时进行回调，这个函数会传入一个 元素对象，我们可以自己保存；")]),t._v(" "),s("li",[t._v("使用时，直接拿到之前保存的元素对象即可；")])])])]),t._v(" "),s("p",[t._v("jsx")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('import React, { PureComponent, createRef } from "react";\n\nexport class index extends PureComponent {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.titleRef = createRef;\n    this.titEl = null;\n  }\n\n  getNativeDom() {\n    // 1 方式一 在React元素上缺点一个ref字符串\n    // console.log(this.refs.mjjh);\n\n    // 2 方式二 提前创建ref对象,createRef(), 将创建出来的对象绑定到元素\n    // console.log(this.titleEL)\n\n    // 3 方式三 传入一个回调函数,对应元素渲染之后,回调函数被执行,并且将元素传入\n    console.log(this.titEl);\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 ref="mjjh">Hello</h2>\n        <h2 ref={this.titleRef}>你好1</h2>\n        <h2 ref={(el) => (this.titleRef = el)}>你好2</h2>\n        <button onClick={(e) => this.getNativeDom()}>获取Dom</button>\n      </div>\n    );\n  }\n}\n\nexport default index;\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br")])]),s("h3",{attrs:{id:"ref-的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ref-的类型"}},[t._v("#")]),t._v(" ref 的类型"),s("a",{attrs:{href:"#ref%E7%9A%84%E7%B1%BB%E5%9E%8B"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("ref 的值根据节点的类型而有所不同：")]),t._v(" "),s("ul",[s("li",[t._v("当 ref 属性用于 HTML 元素时，构造函数中使用 React.createRef() 创建的 ref 接收底层 DOM 元素作为其 current 属性；")]),t._v(" "),s("li",[t._v("当 ref 属性用于自定义 class 组件时，ref 对象接收组件的挂载实例作为其 current 属性；")]),t._v(" "),s("li",[t._v("你不能在函数组件上使用 ref 属性，因为他们没有实例；")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("函数式组件是没有实例的，所以无法通过 ref 获取他们的实例：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://codermjjh.cn/assets/image-20221102222346386.7662f480.png",alt:"image-20221102222346386"}})]),t._v(" "),s("ul",[s("li",[t._v("但是某些时候，我们可能想要获取函数式组件中的某个 DOM 元素；")]),t._v(" "),s("li",[t._v("这个时候我们可以通过 React.forwardRef ，后面我们也会学习 hooks 中如何使用 ref；")])])])]),t._v(" "),s("h3",{attrs:{id:"ref-的转发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ref-的转发"}},[t._v("#")]),t._v(" ref 的转发"),s("a",{attrs:{href:"#ref%E7%9A%84%E8%BD%AC%E5%8F%91"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("在上面我们说 ref 是不能应用与函数式组件;\n"),s("ul",[s("li",[t._v("因为函数式组件没有实例,所以不能获取到对应的组件对象")])])]),t._v(" "),s("li",[t._v("但是,在开发中可能响应获取函数式组件中某个元素的 DOM,这个时候我们应该如何操作呢?\n"),s("ul",[s("li",[t._v("方式一: 直接传入 ref 属性(错误的做法)")]),t._v(" "),s("li",[t._v("方式二: 通过 forwardRef 高阶函数")])])])]),t._v(" "),s("p",[t._v("jsx")]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" PureComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forwardRef "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" HelloWord "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forwardRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("helloWorld")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("hhhh")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("index")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PureComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hwRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" createRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hwRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWord")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hwRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("获取组件实例")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br")])]),s("h2",{attrs:{id:"受控和非受控组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#受控和非受控组件"}},[t._v("#")]),t._v(" 受控和非受控组件"),s("a",{attrs:{href:"#%E5%8F%97%E6%8E%A7%E5%92%8C%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"认识受控组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认识受控组件"}},[t._v("#")]),t._v(" 认识受控组件"),s("a",{attrs:{href:"#%E8%AE%A4%E8%AF%86%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("在 React 中，HTML 表单的处理方式和普通的 DOM 元素不太一样：表单元素通常会保存在一些内部的 state。")]),t._v(" "),s("li",[t._v("比如下面的 HTML 表单元素：\n"),s("ul",[s("li",[t._v("这个处理方式是 DOM 默认处理 HTML 表单的行为，在用户点击提交时会提交到某个服务器中，并且刷新页面；")]),t._v(" "),s("li",[t._v("在 React 中，并没有禁止这个行为，它依然是有效的；")]),t._v(" "),s("li",[t._v("但是通常情况下会使用 JavaScript 函数来方便的处理表单提交，同时还可以访问用户填写的表单数据；")]),t._v(" "),s("li",[t._v("实现这种效果的标准方式是使用“受控组件”；")])])])]),t._v(" "),s("p",[t._v("html")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<form>\n  <label>\n  \t名字:\n    <input type="text" name="name"/>\n  </label>\n   <input type="submit" value="提交"/>\n</form>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"受控组件基本演练"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#受控组件基本演练"}},[t._v("#")]),t._v(" 受控组件基本演练"),s("a",{attrs:{href:"#%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E5%9F%BA%E6%9C%AC%E6%BC%94%E7%BB%83"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("在 HTML 中，表单元素（如"),s("code",[t._v("<input>")]),t._v("、 "),s("code",[t._v("<textarea>")]),t._v(" 和 "),s("code",[t._v("<select>")]),t._v("）之类的表单元素通常自己维护 state，并根据用户输入进 行更新。")]),t._v(" "),s("li",[t._v("而在 React 中，可变状态（mutable state）通常保存在组件的 state 属性中，并且只能通过使用 setState()来更新。\n"),s("ul",[s("li",[t._v("我们将两者结合起来，使 React 的 state 成为“唯一数据源”；")]),t._v(" "),s("li",[t._v("渲染表单的 React 组件还控制着用户输入过程中表单发生的操作；")]),t._v(" "),s("li",[t._v("被 React 以这种方式控制取值的表单输入元素就叫做“受控组件”；")])])]),t._v(" "),s("li",[t._v("由于在表单元素上设置了 value 属性，因此显示的值将始终为 this.state.value，这使得 React 的 state 成为唯一数据源。")]),t._v(" "),s("li",[t._v("由于 handleUsernameChange 在每次按键时都会执行并更新 React 的 state，因此显示的值将随着用户输入而更新。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://codermjjh.cn/assets/image-20221102225407988.d7a5a647.png",alt:"image-20221102225407988"}})]),t._v(" "),s("h3",{attrs:{id:"受控组件的其他演练"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#受控组件的其他演练"}},[t._v("#")]),t._v(" 受控组件的其他演练"),s("a",{attrs:{href:"#%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E7%9A%84%E5%85%B6%E4%BB%96%E6%BC%94%E7%BB%83"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("textarea 标签\n"),s("ul",[s("li",[t._v("texteare 标签和 input 比较相似：")])])]),t._v(" "),s("li",[t._v("select 标签\n"),s("ul",[s("li",[t._v("select 标签的使用也非常简单，只是它不需要通过 selected 属性来控制哪一个被选中，它可以匹配 state 的 value 来选中。")])])]),t._v(" "),s("li",[t._v("处理多个输入\n"),s("ul",[s("li",[t._v("多处理方式可以像单处理方式那样进行操作，但是需要多个监听方法：")]),t._v(" "),s("li",[t._v("这里我们可以使用 ES6 的一个语法：计算属性名（Computed property names）")])])])]),t._v(" "),s("h3",{attrs:{id:"非受控组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非受控组件"}},[t._v("#")]),t._v(" 非受控组件"),s("a",{attrs:{href:"#%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("React 推荐大多数情况下使用 受控组件 来处理表单数据：\n"),s("ul",[s("li",[t._v("一个受控组件中，表单数据是由 React 组件来管理的；")]),t._v(" "),s("li",[t._v("另一种替代方案是使用非受控组件，这时表单数据将交由 DOM 节点来处理；")])])]),t._v(" "),s("li",[t._v("如果要使用非受控组件中的数据，那么我们需要使用 ref 来从 DOM 节点中获取表单数据。\n"),s("ul",[s("li",[t._v("我们来进行一个简单的演练：")]),t._v(" "),s("li",[t._v("使用 ref 来获取 input 元素；")])])]),t._v(" "),s("li",[t._v("在非受控组件中通常使用 defaultValue 来设置默认值；")]),t._v(" "),s("li",[t._v("同样，"),s("code",[t._v('<input type="checkbox">')]),t._v(" 和 "),s("code",[t._v('<input type="radio">')]),t._v(" 支持 defaultChecked，"),s("code",[t._v("<select>")]),t._v(" 和 "),s("code",[t._v("<textarea>")]),t._v(" 支持 defaultValue。")])]),t._v(" "),s("h2",{attrs:{id:"react-的高阶组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-的高阶组件"}},[t._v("#")]),t._v(" React 的高阶组件"),s("a",{attrs:{href:"#react%E7%9A%84%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"认识高阶函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认识高阶函数"}},[t._v("#")]),t._v(" 认识高阶函数"),s("a",{attrs:{href:"#%E8%AE%A4%E8%AF%86%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("什么是高阶组件呢？\n"),s("ul",[s("li",[t._v("相信很多同学都知道（听说过？），也用过 高阶函数")]),t._v(" "),s("li",[t._v("它们非常相似，所以我们可以先来回顾一下什么是 高阶函数。")])])]),t._v(" "),s("li",[t._v("高阶函数的维基百科定义：至少满足以下条件之一：\n"),s("ul",[s("li",[t._v("接受一个或多个函数作为输入；")]),t._v(" "),s("li",[t._v("输出一个函数；")])])]),t._v(" "),s("li",[t._v("JavaScript 中比较常见的 filter、map、reduce 都是高阶函数。")]),t._v(" "),s("li",[t._v("那么说明是高阶组件呢？\n"),s("ul",[s("li",[t._v("高阶组件的英文是 Higher-Order Components，简称为 HOC；")]),t._v(" "),s("li",[t._v("官方的定义：高阶组件是参数为组件，返回值为新组件的函数；")])])]),t._v(" "),s("li",[t._v("我们可以进行如下的解析：\n"),s("ul",[s("li",[t._v("首先， 高阶组件 本身不是一个组件，而是一个函数；")]),t._v(" "),s("li",[t._v("其次，这个函数的参数是一个组件，返回值也是一个组件；")])])])]),t._v(" "),s("h3",{attrs:{id:"高阶组件的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件的定义"}},[t._v("#")]),t._v(" 高阶组件的定义"),s("a",{attrs:{href:"#%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E7%9A%84%E5%AE%9A%E4%B9%89"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("高阶组件的调用过程类似于这样：")]),t._v(" "),s("li",[t._v("高阶函数的编写过程类似于这样：")]),t._v(" "),s("li",[t._v("组件的名称问题：\n"),s("ul",[s("li",[t._v("在 ES6 中，类表达式中类名是可以省略的；")]),t._v(" "),s("li",[t._v("组件的名称都可以通过 displayName 来修改；")])])])]),t._v(" "),s("h3",{attrs:{id:"应用一-props-的增强"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用一-props-的增强"}},[t._v("#")]),t._v(" 应用一 – props 的增强"),s("a",{attrs:{href:"#%E5%BA%94%E7%94%A8%E4%B8%80-%E2%80%93-props%E7%9A%84%E5%A2%9E%E5%BC%BA"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("高阶组件并不是 React API 的一部分，它是基于 React 的 组合特性而形成的设计模式；")]),t._v(" "),s("li",[t._v("高阶组件在一些 React 第三方库中非常常见：\n"),s("ul",[s("li",[t._v("比如 redux 中的 connect；（后续会讲到）")]),t._v(" "),s("li",[t._v("比如 react-router 中的 withRouter；（后续会讲到）")])])]),t._v(" "),s("li",[t._v("不修改原有代码的情况下，添加新的 props")]),t._v(" "),s("li",[t._v("利用高阶组件来共享 Context")])]),t._v(" "),s("h3",{attrs:{id:"应用二-渲染判断鉴权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用二-渲染判断鉴权"}},[t._v("#")]),t._v(" 应用二 – 渲染判断鉴权"),s("a",{attrs:{href:"#%E5%BA%94%E7%94%A8%E4%BA%8C-%E2%80%93-%E6%B8%B2%E6%9F%93%E5%88%A4%E6%96%AD%E9%89%B4%E6%9D%83"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("在开发中，我们可能遇到这样的场景：\n"),s("ul",[s("li",[t._v("某些页面是必须用户登录成功才能进行进入；")]),t._v(" "),s("li",[t._v("如果用户没有登录成功，那么直接跳转到登录页面；")])])]),t._v(" "),s("li",[t._v("这个时候，我们就可以使用高阶组件来完成鉴权操作：")])]),t._v(" "),s("h3",{attrs:{id:"应用三-生命周期劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用三-生命周期劫持"}},[t._v("#")]),t._v(" 应用三 – 生命周期劫持"),s("a",{attrs:{href:"#%E5%BA%94%E7%94%A8%E4%B8%89-%E2%80%93-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8A%AB%E6%8C%81"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("我们也可以利用高阶函数来劫持生命周期，在生命周期中完成自己的逻辑：")])]),t._v(" "),s("h3",{attrs:{id:"高阶函数的意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高阶函数的意义"}},[t._v("#")]),t._v(" 高阶函数的意义"),s("a",{attrs:{href:"#%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E7%9A%84%E6%84%8F%E4%B9%89"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("我们会发现利用高阶组件可以针对某些 React 代码进行更加优雅的处理。")]),t._v(" "),s("li",[t._v("其实早期的 React 有提供组件之间的一种复用方式是 mixin，目前已经不再建议使用：\n"),s("ul",[s("li",[t._v("Mixin 可能会相互依赖，相互耦合，不利于代码维护；")]),t._v(" "),s("li",[t._v("不同的 Mixin 中的方法可能会相互冲突；")]),t._v(" "),s("li",[t._v("Mixin 非常多时，组件处理起来会比较麻烦，甚至还要为其做相关处理，这样会给代码造成滚雪球式的复杂性；")])])]),t._v(" "),s("li",[t._v("当然，HOC 也有自己的一些缺陷：\n"),s("ul",[s("li",[t._v("HOC 需要在原组件上进行包裹或者嵌套，如果大量使用 HOC，将会产生非常多的嵌套，这让调试变得非常困难；")]),t._v(" "),s("li",[t._v("HOC 可以劫持 props，在不遵守约定的情况下也可能造成冲突；")])])]),t._v(" "),s("li",[t._v("Hooks 的出现，是开创性的，它解决了很多 React 之前的存在的问题\n"),s("ul",[s("li",[t._v("比如 this 指向问题、比如 hoc 的嵌套复杂度问题等等；")])])]),t._v(" "),s("li",[t._v("后续我们还会专门来学习 hooks 相关的知识，敬请期待；")])]),t._v(" "),s("h3",{attrs:{id:"ref-的转发-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ref-的转发-2"}},[t._v("#")]),t._v(" ref 的转发"),s("a",{attrs:{href:"#ref%E7%9A%84%E8%BD%AC%E5%8F%91-1"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("在前面我们学习 ref 时讲过，ref 不能应用于函数式组件：\n"),s("ul",[s("li",[t._v("因为函数式组件没有实例，所以不能获取到对应的组件对象")])])]),t._v(" "),s("li",[t._v("但是，在开发中我们可能想要获取函数式组件中某个元素的 DOM，这个时候我们应该如何操作呢？\n"),s("ul",[s("li",[t._v("方式一：直接传入 ref 属性（错误的做法）")]),t._v(" "),s("li",[t._v("方式二：通过 forwardRef 高阶函数；")])])])]),t._v(" "),s("h2",{attrs:{id:"portals-和-fragment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#portals-和-fragment"}},[t._v("#")]),t._v(" portals 和 fragment"),s("a",{attrs:{href:"#portals%E5%92%8Cfragment"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"portals-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#portals-的使用"}},[t._v("#")]),t._v(" Portals 的使用"),s("a",{attrs:{href:"#portals%E7%9A%84%E4%BD%BF%E7%94%A8"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("某些情况下，我们希望渲染的内容独立于父组件，甚至是独立于当前挂载到的 DOM 元素中（默认都是挂载到 id 为 root 的 DOM 元素上的）。")]),t._v(" "),s("li",[t._v("Portal 提供了一种将子节点渲染到存在于父组件以外的 DOM 节点的优秀的方案：\n"),s("ul",[s("li",[t._v("第一个参数（child）是任何可渲染的 React 子元素，例如一个元素，字符串或 fragment；")]),t._v(" "),s("li",[t._v("第二个参数（container）是一个 DOM 元素；")])])]),t._v(" "),s("li",[t._v("通常来讲，当你从组件的 render 方法返回一个元素时，该元素将被挂载到 DOM 节点中离其最近的父节点：")]),t._v(" "),s("li",[t._v("然而，有时候将子元素插入到 DOM 节点中的不同位置也是有好处的：")])]),t._v(" "),s("h3",{attrs:{id:"modal-组件案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modal-组件案例"}},[t._v("#")]),t._v(" Modal 组件案例"),s("a",{attrs:{href:"#modal%E7%BB%84%E4%BB%B6%E6%A1%88%E4%BE%8B"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("比如说，我们准备开发一个 Modal 组件，它可以将它的子组件渲染到屏幕的中间位置：")]),t._v(" "),s("li",[t._v("步骤一：修改 index.html 添加新的节点")]),t._v(" "),s("li",[t._v("步骤二：编写这个节点的样式")]),t._v(" "),s("li",[t._v("步骤三：编写组件代码")])]),t._v(" "),s("h3",{attrs:{id:"fragment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fragment"}},[t._v("#")]),t._v(" fragment"),s("a",{attrs:{href:"#fragment"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("在之前的开发中，我们总是在一个组件中返回内容时包裹一个 div 元素：")]),t._v(" "),s("li",[t._v("我们又希望可以不渲染这样一个 div 应该如何操作呢？\n"),s("ul",[s("li",[t._v("使用 Fragment")]),t._v(" "),s("li",[t._v("Fragment 允许你将子列表分组，而无需向 DOM 添加额外节点；")])])]),t._v(" "),s("li",[t._v("React 还提供了 Fragment 的短语法：\n"),s("ul",[s("li",[t._v("它看起来像空标签 <> </>；")]),t._v(" "),s("li",[t._v("但是，如果我们需要在 Fragment 中添加 key，那么就不能使用短语法")])])])]),t._v(" "),s("h2",{attrs:{id:"strictmode-严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strictmode-严格模式"}},[t._v("#")]),t._v(" StrictMode 严格模式"),s("a",{attrs:{href:"#strictmode%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"strictmode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strictmode"}},[t._v("#")]),t._v(" StrictMode"),s("a",{attrs:{href:"#strictmode"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("StrictMode 是一个用来突出显示应用程序中潜在问题的工具：\n"),s("ul",[s("li",[t._v("与 Fragment 一样，StrictMode 不会渲染任何可见的 UI；")]),t._v(" "),s("li",[t._v("它为其后代元素触发额外的检查和警告；")]),t._v(" "),s("li",[t._v("严格模式检查仅在开发模式下运行；它们不会影响生产构建；")])])]),t._v(" "),s("li",[t._v("可以为应用程序的任何部分启用严格模式：\n"),s("ul",[s("li",[t._v("不会对 Header 和 Footer 组件运行严格模式检查；")]),t._v(" "),s("li",[t._v("但是，ComponentOne 和 ComponentTwo 以及它们的所有后代元素都将进行检查；")])])])]),t._v(" "),s("h3",{attrs:{id:"严格模式检查的是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#严格模式检查的是什么"}},[t._v("#")]),t._v(" 严格模式检查的是什么？"),s("a",{attrs:{href:"#%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F%E6%A3%80%E6%9F%A5%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("但是检测，到底检测什么呢？")]),t._v(" "),s("li",[t._v("1.识别不安全的生命周期：")]),t._v(" "),s("li",[t._v("2.使用过时的 ref API")]),t._v(" "),s("li",[t._v("3.检查意外的副作用\n"),s("ul",[s("li",[t._v("这个组件的 constructor 会被调用两次；")]),t._v(" "),s("li",[t._v("这是严格模式下故意进行的操作，让你来查看在这里写的一些逻辑代码被调用多次时，是否会产生一些副作用；")]),t._v(" "),s("li",[t._v("在生产环境中，是不会被调用两次的；")])])]),t._v(" "),s("li",[t._v("4.使用废弃的 findDOMNode 方法\n"),s("ul",[s("li",[t._v("在之前的 React API 中，可以通过 findDOMNode 来获取 DOM，不过已经不推荐使用了，可以自行学习演练一下")])])]),t._v(" "),s("li",[t._v("5.检测过时的 context API\n"),s("ul",[s("li",[t._v("早期的 Context 是通过 static 属性声明 Context 对象属性，通过 getChildContext 返回 Context 对象等方式来使用 Context 的；")]),t._v(" "),s("li",[t._v("目前这种方式已经不推荐使用，大家可以自行学习了解一下它的用法；")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);