(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{657:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_001-http-报文结构是怎样的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_001-http-报文结构是怎样的"}},[t._v("#")]),t._v(" 001. HTTP 报文结构是怎样的？")]),t._v(" "),a("p",[t._v("对于 TCP 而言，在传输的时候分为两个部分:"),a("strong",[t._v("TCP 头")]),t._v("和"),a("strong",[t._v("数据部分")]),t._v("。")]),t._v(" "),a("p",[t._v("而 HTTP 类似，也是"),a("code",[t._v("header + body")]),t._v("的结构，具体而言:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("起始行 + 头部 + 空行 + 实体\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("由于 http "),a("code",[t._v("请求报文")]),t._v("和"),a("code",[t._v("响应报文")]),t._v("是有一定区别，因此我们分开介绍。")]),t._v(" "),a("h3",{attrs:{id:"起始行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#起始行"}},[t._v("#")]),t._v(" 起始行")]),t._v(" "),a("p",[t._v("对于请求报文来说，起始行类似下面这样:")]),t._v(" "),a("div",{staticClass:"language-arduino line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-arduino"}},[a("code",[t._v("GET "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("home")]),t._v(" HTTP"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("也就是"),a("strong",[t._v("方法 + 路径 + http 版本")]),t._v("。")]),t._v(" "),a("p",[t._v("对于响应报文来说，起始行一般张这个样:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("HTTP/1.1 200 OK\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("响应报文的起始行也叫做"),a("code",[t._v("状态行")]),t._v("。由"),a("strong",[t._v("http 版本、状态码和原因")]),t._v("三部分组成。")]),t._v(" "),a("p",[t._v("值得注意的是，在起始行中，每两个部分之间用"),a("strong",[t._v("空格")]),t._v("隔开，最后一个部分后面应该接一个"),a("strong",[t._v("换行")]),t._v("，严格遵循"),a("code",[t._v("ABNF")]),t._v("语法规范。")]),t._v(" "),a("h3",{attrs:{id:"头部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头部"}},[t._v("#")]),t._v(" 头部")]),t._v(" "),a("p",[t._v("展示一下请求头和响应头在报文中的位置:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd6012e2fc88~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd62af8538e4~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("不管是请求头还是响应头，其中的字段是相当多的，而且牵扯到"),a("code",[t._v("http")]),t._v("非常多的特性，这里就不一一列举的，重点看看这些头部字段的格式：")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("字段名不区分大小写")])])]),t._v(" "),a("li",[a("ol",[a("li",[t._v("字段名不允许出现空格，不可以出现下划线"),a("code",[t._v("_")])])])]),t._v(" "),a("li",[a("ol",[a("li",[t._v("字段名后面必须"),a("strong",[t._v("紧接着"),a("code",[t._v(":")])])])])])]),t._v(" "),a("h3",{attrs:{id:"空行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空行"}},[t._v("#")]),t._v(" 空行")]),t._v(" "),a("p",[t._v("很重要，用来区分开"),a("code",[t._v("头部")]),t._v("和"),a("code",[t._v("实体")]),t._v("。")]),t._v(" "),a("p",[t._v("问: 如果说在头部中间故意加一个空行会怎么样？")]),t._v(" "),a("p",[t._v("那么空行后的内容全部被视为实体。")]),t._v(" "),a("h3",{attrs:{id:"实体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实体"}},[t._v("#")]),t._v(" 实体")]),t._v(" "),a("p",[t._v("就是具体的数据了，也就是"),a("code",[t._v("body")]),t._v("部分。请求报文对应"),a("code",[t._v("请求体")]),t._v(", 响应报文对应"),a("code",[t._v("响应体")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_002-如何理解-http-的请求方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_002-如何理解-http-的请求方法"}},[t._v("#")]),t._v(" 002. 如何理解 HTTP 的请求方法？")]),t._v(" "),a("h3",{attrs:{id:"有哪些请求方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有哪些请求方法"}},[t._v("#")]),t._v(" 有哪些请求方法？")]),t._v(" "),a("p",[a("code",[t._v("http/1.1")]),t._v("规定了以下请求方法(注意，都是大写):")]),t._v(" "),a("ul",[a("li",[t._v("GET: 通常用来获取资源")]),t._v(" "),a("li",[t._v("HEAD: 获取资源的元信息")]),t._v(" "),a("li",[t._v("POST: 提交数据，即上传数据")]),t._v(" "),a("li",[t._v("PUT: 修改数据")]),t._v(" "),a("li",[t._v("DELETE: 删除资源(几乎用不到)")]),t._v(" "),a("li",[t._v("CONNECT: 建立连接隧道，用于代理服务器")]),t._v(" "),a("li",[t._v("OPTIONS: 列出可对资源实行的请求方法，用来跨域请求")]),t._v(" "),a("li",[t._v("TRACE: 追踪请求-响应的传输路径")])]),t._v(" "),a("h3",{attrs:{id:"get-和-post-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-有什么区别"}},[t._v("#")]),t._v(" GET 和 POST 有什么区别？")]),t._v(" "),a("p",[t._v("首先最直观的是语义上的区别。")]),t._v(" "),a("p",[t._v("而后又有这样一些具体的差别:")]),t._v(" "),a("ul",[a("li",[t._v("从"),a("strong",[t._v("缓存")]),t._v("的角度，GET 请求会被浏览器主动缓存下来，留下历史记录，而 POST 默认不会。")]),t._v(" "),a("li",[t._v("从"),a("strong",[t._v("编码")]),t._v("的角度，GET 只能进行 URL 编码，只能接收 ASCII 字符，而 POST 没有限制。")]),t._v(" "),a("li",[t._v("从"),a("strong",[t._v("参数")]),t._v("的角度，GET 一般放在 URL 中，因此不安全，POST 放在请求体中，更适合传输敏感信息。")]),t._v(" "),a("li",[t._v("从"),a("strong",[t._v("幂等性")]),t._v("的角度，"),a("code",[t._v("GET")]),t._v("是"),a("strong",[t._v("幂等")]),t._v("的，而"),a("code",[t._v("POST")]),t._v("不是。("),a("code",[t._v("幂等")]),t._v("表示执行相同的操作，结果也是相同的)")]),t._v(" "),a("li",[t._v("从"),a("strong",[t._v("TCP")]),t._v("的角度，GET 请求会把请求报文一次性发出去，而 POST 会分为两个 TCP 数据包，首先发 header 部分，如果服务器响应 100(continue)， 然后发 body 部分。("),a("strong",[t._v("火狐")]),t._v("浏览器除外，它的 POST 请求只发一个 TCP 包)")])]),t._v(" "),a("h2",{attrs:{id:"_003-如何理解-uri"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_003-如何理解-uri"}},[t._v("#")]),t._v(" 003: 如何理解 URI？")]),t._v(" "),a("p",[a("strong",[t._v("URI")]),t._v(", 全称为(Uniform Resource Identifier), 也就是"),a("strong",[t._v("统一资源标识符")]),t._v("，它的作用很简单，就是区分互联网上不同的资源。")]),t._v(" "),a("p",[t._v("但是，它并不是我们常说的"),a("code",[t._v("网址")]),t._v(", 网址指的是"),a("code",[t._v("URL")]),t._v(", 实际上"),a("code",[t._v("URI")]),t._v("包含了"),a("code",[t._v("URN")]),t._v("和"),a("code",[t._v("URL")]),t._v("两个部分，由于 URL 过于普及，就默认将 URI 视为 URL 了。")]),t._v(" "),a("h3",{attrs:{id:"uri-的结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uri-的结构"}},[t._v("#")]),t._v(" URI 的结构")]),t._v(" "),a("p",[t._v("URI 真正最完整的结构是这样的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd677629b70d~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("可能你会有疑问，好像跟平时见到的不太一样啊！先别急，我们来一一拆解。")]),t._v(" "),a("p",[a("strong",[t._v("scheme")]),t._v(" 表示协议名，比如"),a("code",[t._v("http")]),t._v(", "),a("code",[t._v("https")]),t._v(", "),a("code",[t._v("file")]),t._v("等等。后面必须和"),a("code",[t._v("://")]),t._v("连在一起。")]),t._v(" "),a("p",[a("strong",[t._v("user:passwd")]),t._v("@ 表示登录主机时的用户信息，不过很不安全，不推荐使用，也不常用。")]),t._v(" "),a("p",[a("strong",[t._v("host:port")]),t._v("表示主机名和端口。")]),t._v(" "),a("p",[a("strong",[t._v("path")]),t._v("表示请求路径，标记资源所在位置。")]),t._v(" "),a("p",[a("strong",[t._v("query")]),t._v("表示查询参数，为"),a("code",[t._v("key=val")]),t._v("这种形式，多个键值对之间用"),a("code",[t._v("&")]),t._v("隔开。")]),t._v(" "),a("p",[a("strong",[t._v("fragment")]),t._v("表示 URI 所定位的资源内的一个"),a("strong",[t._v("锚点")]),t._v("，浏览器可以根据这个锚点跳转到对应的位置。")]),t._v(" "),a("p",[t._v("举个例子:")]),t._v(" "),a("div",{staticClass:"language-ini line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("https://www.baidu.com/s?wd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("HTTP&rsv_spt=1")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("这个 URI 中，"),a("code",[t._v("https")]),t._v("即"),a("code",[t._v("scheme")]),t._v("部分，"),a("code",[t._v("www.baidu.com")]),t._v("为"),a("code",[t._v("host:port")]),t._v("部分（注意，http 和 https 的默认端口分别为 80、443），"),a("code",[t._v("/s")]),t._v("为"),a("code",[t._v("path")]),t._v("部分，而"),a("code",[t._v("wd=HTTP&rsv_spt=1")]),t._v("就是"),a("code",[t._v("query")]),t._v("部分。")]),t._v(" "),a("h3",{attrs:{id:"uri-编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uri-编码"}},[t._v("#")]),t._v(" URI 编码")]),t._v(" "),a("p",[t._v("URI 只能使用"),a("code",[t._v("ASCII")]),t._v(", ASCII 之外的字符是不支持显示的，而且还有一部分符号是界定符，如果不加以处理就会导致解析出错。")]),t._v(" "),a("p",[t._v("因此，URI 引入了"),a("code",[t._v("编码")]),t._v("机制，将所有"),a("strong",[t._v("非 ASCII 码字符")]),t._v("和"),a("strong",[t._v("界定符")]),t._v("转为十六进制字节值，然后在前面加个"),a("code",[t._v("%")]),t._v("。")]),t._v(" "),a("p",[t._v("如，空格被转义成了"),a("code",[t._v("%20")]),t._v("，"),a("strong",[t._v("三元")]),t._v("被转义成了"),a("code",[t._v("%E4%B8%89%E5%85%83")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_004-如何理解-http-状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_004-如何理解-http-状态码"}},[t._v("#")]),t._v(" 004: 如何理解 HTTP 状态码？")]),t._v(" "),a("p",[t._v("RFC 规定 HTTP 的状态码为"),a("strong",[t._v("三位数")]),t._v("，被分为五类:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("1xx")]),t._v(": 表示目前是协议处理的中间状态，还需要后续操作。")]),t._v(" "),a("li",[a("strong",[t._v("2xx")]),t._v(": 表示成功状态。")]),t._v(" "),a("li",[a("strong",[t._v("3xx")]),t._v(": 重定向状态，资源位置发生变动，需要重新请求。")]),t._v(" "),a("li",[a("strong",[t._v("4xx")]),t._v(": 请求报文有误。")]),t._v(" "),a("li",[a("strong",[t._v("5xx")]),t._v(": 服务器端发生错误。")])]),t._v(" "),a("p",[t._v("接下来就一一分析这里面具体的状态码。")]),t._v(" "),a("h3",{attrs:{id:"_1xx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1xx"}},[t._v("#")]),t._v(" 1xx")]),t._v(" "),a("p",[a("strong",[t._v("101 Switching Protocols")]),t._v("。在"),a("code",[t._v("HTTP")]),t._v("升级为"),a("code",[t._v("WebSocket")]),t._v("的时候，如果服务器同意变更，就会发送状态码 101。")]),t._v(" "),a("h3",{attrs:{id:"_2xx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2xx"}},[t._v("#")]),t._v(" 2xx")]),t._v(" "),a("p",[a("strong",[t._v("200 OK")]),t._v("是见得最多的成功状态码。通常在响应体中放有数据。")]),t._v(" "),a("p",[a("strong",[t._v("204 No Content")]),t._v("含义与 200 相同，但响应头后没有 body 数据。")]),t._v(" "),a("p",[a("strong",[t._v("206 Partial Content")]),t._v("顾名思义，表示部分内容，它的使用场景为 HTTP 分块下载和断点续传，当然也会带上相应的响应头字段"),a("code",[t._v("Content-Range")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_3xx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3xx"}},[t._v("#")]),t._v(" 3xx")]),t._v(" "),a("p",[a("strong",[t._v("301 Moved Permanently")]),t._v("即永久重定向，对应着"),a("strong",[t._v("302 Found")]),t._v("，即临时重定向。")]),t._v(" "),a("p",[t._v("比如你的网站从 HTTP 升级到了 HTTPS 了，以前的站点再也不用了，应当返回"),a("code",[t._v("301")]),t._v("，这个时候浏览器默认会做缓存优化，在第二次访问的时候自动访问重定向的那个地址。")]),t._v(" "),a("p",[t._v("而如果只是暂时不可用，那么直接返回"),a("code",[t._v("302")]),t._v("即可，和"),a("code",[t._v("301")]),t._v("不同的是，浏览器并不会做缓存优化。")]),t._v(" "),a("p",[a("strong",[t._v("304 Not Modified")]),t._v(": 当协商缓存命中时会返回这个状态码。详见"),a("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2F47.98.159.95%2Fmy_blog%2Fperform%2F001.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器缓存"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_4xx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4xx"}},[t._v("#")]),t._v(" 4xx")]),t._v(" "),a("p",[a("strong",[t._v("400 Bad Request")]),t._v(": 开发者经常看到一头雾水，只是笼统地提示了一下错误，并不知道哪里出错了。")]),t._v(" "),a("p",[a("strong",[t._v("403 Forbidden")]),t._v(": 这实际上并不是请求报文出错，而是服务器禁止访问，原因有很多，比如法律禁止、信息敏感。")]),t._v(" "),a("p",[a("strong",[t._v("404 Not Found")]),t._v(": 资源未找到，表示没在服务器上找到相应的资源。")]),t._v(" "),a("p",[a("strong",[t._v("405 Method Not Allowed")]),t._v(": 请求方法不被服务器端允许。")]),t._v(" "),a("p",[a("strong",[t._v("406 Not Acceptable")]),t._v(": 资源无法满足客户端的条件。")]),t._v(" "),a("p",[a("strong",[t._v("408 Request Timeout")]),t._v(": 服务器等待了太长时间。")]),t._v(" "),a("p",[a("strong",[t._v("409 Conflict")]),t._v(": 多个请求发生了冲突。")]),t._v(" "),a("p",[a("strong",[t._v("413 Request Entity Too Large")]),t._v(": 请求体的数据过大。")]),t._v(" "),a("p",[a("strong",[t._v("414 Request-URI Too Long")]),t._v(": 请求行里的 URI 太大。")]),t._v(" "),a("p",[a("strong",[t._v("429 Too Many Request")]),t._v(": 客户端发送的请求过多。")]),t._v(" "),a("p",[a("strong",[t._v("431 Request Header Fields Too Large")]),t._v("请求头的字段内容太大。")]),t._v(" "),a("h3",{attrs:{id:"_5xx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5xx"}},[t._v("#")]),t._v(" 5xx")]),t._v(" "),a("p",[a("strong",[t._v("500 Internal Server Error")]),t._v(": 仅仅告诉你服务器出错了，出了啥错咱也不知道。")]),t._v(" "),a("p",[a("strong",[t._v("501 Not Implemented")]),t._v(": 表示客户端请求的功能还不支持。")]),t._v(" "),a("p",[a("strong",[t._v("502 Bad Gateway")]),t._v(": 服务器自身是正常的，但访问的时候出错了，啥错误咱也不知道。")]),t._v(" "),a("p",[a("strong",[t._v("503 Service Unavailable")]),t._v(": 表示服务器当前很忙，暂时无法响应服务。")]),t._v(" "),a("h2",{attrs:{id:"_005-简要概括一下-http-的特点-http-有哪些缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_005-简要概括一下-http-的特点-http-有哪些缺点"}},[t._v("#")]),t._v(" 005: 简要概括一下 HTTP 的特点？HTTP 有哪些缺点？")]),t._v(" "),a("h3",{attrs:{id:"http-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-特点"}},[t._v("#")]),t._v(" HTTP 特点")]),t._v(" "),a("p",[t._v("HTTP 的特点概括如下:")]),t._v(" "),a("ol",[a("li",[t._v("灵活可扩展，主要体现在两个方面。一个是语义上的自由，只规定了基本格式，比如空格分隔单词，换行分隔字段，其他的各个部分都没有严格的语法限制。另一个是传输形式的多样性，不仅仅可以传输文本，还能传输图片、视频等任意数据，非常方便。")]),t._v(" "),a("li",[t._v("可靠传输。HTTP 基于 TCP/IP，因此把这一特性继承了下来。这属于 TCP 的特性，不具体介绍了。")]),t._v(" "),a("li",[t._v("请求-应答。也就是"),a("code",[t._v("一发一收")]),t._v("、"),a("code",[t._v("有来有回")]),t._v("， 当然这个请求方和应答方不单单指客户端和服务器之间，如果某台服务器作为代理来连接后端的服务端，那么这台服务器也会扮演"),a("strong",[t._v("请求方")]),t._v("的角色。")]),t._v(" "),a("li",[t._v("无状态。这里的状态是指"),a("strong",[t._v("通信过程的上下文信息")]),t._v("，而每次 http 请求都是独立、无关的，默认不需要保留状态信息。")])]),t._v(" "),a("h3",{attrs:{id:"http-缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-缺点"}},[t._v("#")]),t._v(" HTTP 缺点")]),t._v(" "),a("h4",{attrs:{id:"无状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无状态"}},[t._v("#")]),t._v(" 无状态")]),t._v(" "),a("p",[t._v("所谓的优点和缺点还是要分场景来看的，对于 HTTP 而言，最具争议的地方在于它的"),a("strong",[t._v("无状态")]),t._v("。")]),t._v(" "),a("p",[t._v("在需要长连接的场景中，需要保存大量的上下文信息，以免传输大量重复的信息，那么这时候无状态就是 http 的缺点了。")]),t._v(" "),a("p",[t._v("但与此同时，另外一些应用仅仅只是为了获取一些数据，不需要保存连接上下文信息，无状态反而减少了网络开销，成为了 http 的优点。")]),t._v(" "),a("h4",{attrs:{id:"明文传输"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#明文传输"}},[t._v("#")]),t._v(" 明文传输")]),t._v(" "),a("p",[t._v("即协议里的报文(主要指的是头部)不使用二进制数据，而是文本形式。")]),t._v(" "),a("p",[t._v("这当然对于调试提供了便利，但同时也让 HTTP 的报文信息暴露给了外界，给攻击者也提供了便利。"),a("code",[t._v("WIFI陷阱")]),t._v("就是利用 HTTP 明文传输的缺点，诱导你连上热点，然后疯狂抓你所有的流量，从而拿到你的敏感信息。")]),t._v(" "),a("h4",{attrs:{id:"队头阻塞问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队头阻塞问题"}},[t._v("#")]),t._v(" 队头阻塞问题")]),t._v(" "),a("p",[t._v("当 http 开启长连接时，共用一个 TCP 连接，同一时刻只能处理一个请求，那么当前请求耗时过长的情况下，其它的请求只能处于阻塞状态，也就是著名的"),a("strong",[t._v("队头阻塞")]),t._v("问题。接下来会有一小节讨论这个问题。")]),t._v(" "),a("h2",{attrs:{id:"_006-对-accept-系列字段了解多少"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_006-对-accept-系列字段了解多少"}},[t._v("#")]),t._v(" 006: 对 Accept 系列字段了解多少？")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("Accept")]),t._v("系列字段的介绍分为四个部分: "),a("strong",[t._v("数据格式")]),t._v("、"),a("strong",[t._v("压缩方式")]),t._v("、"),a("strong",[t._v("支持语言")]),t._v("和"),a("strong",[t._v("字符集")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"数据格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据格式"}},[t._v("#")]),t._v(" 数据格式")]),t._v(" "),a("p",[t._v("上一节谈到 HTTP 灵活的特性，它支持非常多的数据格式，那么这么多格式的数据一起到达客户端，客户端怎么知道它的格式呢？")]),t._v(" "),a("p",[t._v("当然，最低效的方式是直接猜，有没有更好的方式呢？直接指定可以吗？")]),t._v(" "),a("p",[t._v("答案是肯定的。不过首先需要介绍一个标准——"),a("strong",[t._v("MIME")]),t._v("(Multipurpose Internet Mail Extensions, "),a("strong",[t._v("多用途互联网邮件扩展")]),t._v(")。它首先用在电子邮件系统中，让邮件可以发任意类型的数据，这对于 HTTP 来说也是通用的。")]),t._v(" "),a("p",[t._v("因此，HTTP 从"),a("strong",[t._v("MIME type")]),t._v("取了一部分来标记报文 body 部分的数据类型，这些类型体现在"),a("code",[t._v("Content-Type")]),t._v("这个字段，当然这是针对于发送端而言，接收端想要收到特定类型的数据，也可以用"),a("code",[t._v("Accept")]),t._v("字段。")]),t._v(" "),a("p",[t._v("具体而言，这两个字段的取值可以分为下面几类:")]),t._v(" "),a("ul",[a("li",[t._v("text： text/html, text/plain, text/css 等")]),t._v(" "),a("li",[t._v("image: image/gif, image/jpeg, image/png 等")]),t._v(" "),a("li",[t._v("audio/video: audio/mpeg, video/mp4 等")]),t._v(" "),a("li",[t._v("application: application/json, application/javascript, application/pdf, application/octet-stream")])]),t._v(" "),a("h3",{attrs:{id:"压缩方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#压缩方式"}},[t._v("#")]),t._v(" 压缩方式")]),t._v(" "),a("p",[t._v("当然一般这些数据都是会进行编码压缩的，采取什么样的压缩方式就体现在了发送方的"),a("code",[t._v("Content-Encoding")]),t._v("字段上， 同样的，接收什么样的压缩方式体现在了接受方的"),a("code",[t._v("Accept-Encoding")]),t._v("字段上。这个字段的取值有下面几种：")]),t._v(" "),a("ul",[a("li",[t._v("gzip: 当今最流行的压缩格式")]),t._v(" "),a("li",[t._v("deflate: 另外一种著名的压缩格式")]),t._v(" "),a("li",[t._v("br: 一种专门为 HTTP 发明的压缩算法")])]),t._v(" "),a("div",{staticClass:"language-less line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送端")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Content-Encoding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gzip\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收端")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Accept-Encoding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gzip\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"支持语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持语言"}},[t._v("#")]),t._v(" 支持语言")]),t._v(" "),a("p",[t._v("对于发送方而言，还有一个"),a("code",[t._v("Content-Language")]),t._v("字段，在需要实现国际化的方案当中，可以用来指定支持的语言，在接受方对应的字段为"),a("code",[t._v("Accept-Language")]),t._v("。如:")]),t._v(" "),a("div",{staticClass:"language-less line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送端")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Content-Language")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("CN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" zh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" en\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收端")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Accept-Language")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("CN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" zh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" en\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"字符集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[t._v("#")]),t._v(" 字符集")]),t._v(" "),a("p",[t._v("最后是一个比较特殊的字段, 在接收端对应为"),a("code",[t._v("Accept-Charset")]),t._v("，指定可以接受的字符集，而在发送端并没有对应的"),a("code",[t._v("Content-Charset")]),t._v(", 而是直接放在了"),a("code",[t._v("Content-Type")]),t._v("中，以"),a("strong",[t._v("charset")]),t._v("属性指定。如:")]),t._v(" "),a("div",{staticClass:"language-scss line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送端")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Content-Type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text/html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" charset=utf-8\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收端")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Accept-Charset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" charset=utf-8\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("最后以一张图来总结一下吧:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd6bb6d09c2d~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"_007-对于定长和不定长的数据-http-是怎么传输的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_007-对于定长和不定长的数据-http-是怎么传输的"}},[t._v("#")]),t._v(" 007: 对于定长和不定长的数据，HTTP 是怎么传输的？")]),t._v(" "),a("h3",{attrs:{id:"定长包体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定长包体"}},[t._v("#")]),t._v(" 定长包体")]),t._v(" "),a("p",[t._v("对于定长包体而言，发送端在传输的时候一般会带上 "),a("code",[t._v("Content-Length")]),t._v(", 来指明包体的长度。")]),t._v(" "),a("p",[t._v("我们用一个"),a("code",[t._v("nodejs")]),t._v("服务器来模拟一下:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"request"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/plain"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"helloworld"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"成功启动"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n复制代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("启动后访问: "),a("strong",[t._v("localhost:8081")]),t._v("。")]),t._v(" "),a("p",[t._v("浏览器中显示如下:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("helloworld\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("这是长度正确的情况，那不正确的情况是如何处理的呢？")]),t._v(" "),a("p",[t._v("我们试着把这个长度设置的小一些:")]),t._v(" "),a("div",{staticClass:"language-arduino line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-arduino"}},[a("code",[t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'Content-Length'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("重启服务，再次访问，现在浏览器中内容如下:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("hellowor\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("那后面的"),a("code",[t._v("ld")]),t._v("哪里去了呢？实际上在 http 的响应体中直接被截去了。")]),t._v(" "),a("p",[t._v("然后我们试着将这个长度设置得大一些:")]),t._v(" "),a("div",{staticClass:"language-arduino line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-arduino"}},[a("code",[t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'Content-Length'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("此时浏览器显示如下:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd6f598bea62~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("直接无法显示了。可以看到"),a("code",[t._v("Content-Length")]),t._v("对于 http 传输过程起到了十分关键的作用，如果设置不当可以直接导致传输失败。")]),t._v(" "),a("h3",{attrs:{id:"不定长包体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不定长包体"}},[t._v("#")]),t._v(" 不定长包体")]),t._v(" "),a("p",[t._v("上述是针对于"),a("code",[t._v("定长包体")]),t._v("，那么对于"),a("code",[t._v("不定长包体")]),t._v("而言是如何传输的呢？")]),t._v(" "),a("p",[t._v("这里就必须介绍另外一个 http 头部字段了:")]),t._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Transfer-Encoding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" chunked\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("表示分块传输数据，设置这个字段后会自动产生两个效果:")]),t._v(" "),a("ul",[a("li",[t._v("Content-Length 字段会被忽略")]),t._v(" "),a("li",[t._v("基于长连接持续推送动态内容")])]),t._v(" "),a("p",[t._v("我们依然以一个实际的例子来模拟分块传输，nodejs 程序如下:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"request"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/html; charset=utf8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Transfer-Encoding"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chunked"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<p>来啦</p>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第一次传输<br/>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第二次传输"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8009")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"成功启动"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n复制代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("p",[t._v("访问效果入下:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd728ba3840d~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("用 telnet 抓到的响应如下:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd78332368a0~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("注意，"),a("code",[t._v("Connection: keep-alive")]),t._v("及之前的为响应行和响应头，后面的内容为响应体，这两部分用换行符隔开。")]),t._v(" "),a("p",[t._v("响应体的结构比较有意思，如下所示:")]),t._v(" "),a("div",{staticClass:"language-scss line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("chunk长度"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("16进制的数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n第一个chunk的内容\nchunk长度"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("16进制的数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n第二个chunk的内容\n......\n0\n\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("最后是留有有一个"),a("code",[t._v("空行")]),t._v("的，这一点请大家注意。")]),t._v(" "),a("p",[t._v("以上便是 http 对于"),a("strong",[t._v("定长数据")]),t._v("和"),a("strong",[t._v("不定长数据")]),t._v("的传输方式。")]),t._v(" "),a("h2",{attrs:{id:"_008-http-如何处理大文件的传输"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_008-http-如何处理大文件的传输"}},[t._v("#")]),t._v(" 008: HTTP 如何处理大文件的传输？")]),t._v(" "),a("p",[t._v("对于几百 M 甚至上 G 的大文件来说，如果要一口气全部传输过来显然是不现实的，会有大量的等待时间，严重影响用户体验。因此，HTTP 针对这一场景，采取了"),a("code",[t._v("范围请求")]),t._v("的解决方案，允许客户端仅仅请求一个资源的一部分。")]),t._v(" "),a("h3",{attrs:{id:"如何支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何支持"}},[t._v("#")]),t._v(" 如何支持")]),t._v(" "),a("p",[t._v("当然，前提是服务器要支持"),a("strong",[t._v("范围请求")]),t._v("，要支持这个功能，就必须加上这样一个响应头:")]),t._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Accept-Ranges")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("用来告知客户端这边是支持范围请求的。")]),t._v(" "),a("h3",{attrs:{id:"range-字段拆解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#range-字段拆解"}},[t._v("#")]),t._v(" Range 字段拆解")]),t._v(" "),a("p",[t._v("而对于客户端而言，它需要指定请求哪一部分，通过"),a("code",[t._v("Range")]),t._v("这个请求头字段确定，格式为"),a("code",[t._v("bytes=x-y")]),t._v("。接下来就来讨论一下这个 Range 的书写格式:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("0-499")]),t._v("表示从开始到第 499 个字节。")]),t._v(" "),a("li",[a("strong",[t._v("500")]),t._v("- 表示从第 500 字节到文件终点。")]),t._v(" "),a("li",[a("strong",[t._v("-100")]),t._v("表示文件的最后 100 个字节。")])]),t._v(" "),a("p",[t._v("服务器收到请求之后，首先验证范围"),a("strong",[t._v("是否合法")]),t._v("，如果越界了那么返回"),a("code",[t._v("416")]),t._v("错误码，否则读取相应片段，返回"),a("code",[t._v("206")]),t._v("状态码。")]),t._v(" "),a("p",[t._v("同时，服务器需要添加"),a("code",[t._v("Content-Range")]),t._v("字段，这个字段的格式根据请求头中"),a("code",[t._v("Range")]),t._v("字段的不同而有所差异。")]),t._v(" "),a("p",[t._v("具体来说，请求"),a("code",[t._v("单段数据")]),t._v("和请求"),a("code",[t._v("多段数据")]),t._v("，响应头是不一样的。")]),t._v(" "),a("p",[t._v("举个例子:")]),t._v(" "),a("div",{staticClass:"language-ini line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("// 单段数据\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("Range: bytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("0-9")]),t._v("\n// 多段数据\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("Range: bytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("0-9, 30-39")]),t._v("\n\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("接下来我们就分别来讨论着两种情况。")]),t._v(" "),a("h3",{attrs:{id:"单段数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单段数据"}},[t._v("#")]),t._v(" 单段数据")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("单段数据")]),t._v("的请求，返回的响应如下:")]),t._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[t._v("HTTP/1.1 206 Partial Content\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Content-Length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Accept-Ranges")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bytes\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Content-Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bytes 0-9/100\n\ni am xxxxx\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("值得注意的是"),a("code",[t._v("Content-Range")]),t._v("字段，"),a("code",[t._v("0-9")]),t._v("表示请求的返回，"),a("code",[t._v("100")]),t._v("表示资源的总大小，很好理解。")]),t._v(" "),a("h3",{attrs:{id:"多段数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多段数据"}},[t._v("#")]),t._v(" 多段数据")]),t._v(" "),a("p",[t._v("接下来我们看看多段请求的情况。得到的响应会是下面这个形式:")]),t._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[t._v("HTTP/1.1 206 Partial Content\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Content-Type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" multipart/byteranges"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" boundary"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("00000010101\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Content-Length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 189\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Connection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keep-alive\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Accept-Ranges")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bytes\n\n\n--00000010101\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Content-Type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text/plain\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Content-Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bytes 0-9/96\n\ni am xxxxx\n--00000010101\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Content-Type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text/plain\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Content-Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bytes 20-29/96\n\neex jspy e\n--00000010101--\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[t._v("这个时候出现了一个非常关键的字段"),a("code",[t._v("Content-Type: multipart/byteranges;boundary=00000010101")]),t._v("，它代表了信息量是这样的:")]),t._v(" "),a("ul",[a("li",[t._v("请求一定是多段数据请求")]),t._v(" "),a("li",[t._v("响应体中的分隔符是 00000010101")])]),t._v(" "),a("p",[t._v("因此，在响应体中各段数据之间会由这里指定的分隔符分开，而且在最后的分隔末尾添上"),a("code",[t._v("--")]),t._v("表示结束。")]),t._v(" "),a("p",[t._v("以上就是 http 针对大文件传输所采用的手段。")]),t._v(" "),a("h2",{attrs:{id:"_009-http-中如何处理表单数据的提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_009-http-中如何处理表单数据的提交"}},[t._v("#")]),t._v(" 009: HTTP 中如何处理表单数据的提交？")]),t._v(" "),a("p",[t._v("在 http 中，有两种主要的表单提交的方式，体现在两种不同的"),a("code",[t._v("Content-Type")]),t._v("取值:")]),t._v(" "),a("ul",[a("li",[t._v("application/x-www-form-urlencoded")]),t._v(" "),a("li",[t._v("multipart/form-data")])]),t._v(" "),a("p",[t._v("由于表单提交一般是"),a("code",[t._v("POST")]),t._v("请求，很少考虑"),a("code",[t._v("GET")]),t._v("，因此这里我们将默认提交的数据放在请求体中。")]),t._v(" "),a("h3",{attrs:{id:"application-x-www-form-urlencoded"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-x-www-form-urlencoded"}},[t._v("#")]),t._v(" application/x-www-form-urlencoded")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("application/x-www-form-urlencoded")]),t._v("格式的表单内容，有以下特点:")]),t._v(" "),a("ul",[a("li",[t._v("其中的数据会被编码成以"),a("code",[t._v("&")]),t._v("分隔的键值对")]),t._v(" "),a("li",[t._v("字符以"),a("strong",[t._v("URL 编码方式")]),t._v("编码。")])]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("// 转换过程:")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" -> a=1&b=2 -> 如下"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("最终形式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a%3D1%26b%3D2"')]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"multipart-form-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multipart-form-data"}},[t._v("#")]),t._v(" multipart/form-data")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("multipart/form-data")]),t._v("而言:")]),t._v(" "),a("ul",[a("li",[t._v("请求头中的"),a("code",[t._v("Content-Type")]),t._v("字段会包含"),a("code",[t._v("boundary")]),t._v("，且"),a("code",[t._v("boundary")]),t._v("的值有浏览器默认指定。例: "),a("code",[t._v("Content-Type: multipart/form-data;boundary=----WebkitFormBoundaryRRJKeWfHPGrS4LKe")]),t._v("。")]),t._v(" "),a("li",[t._v("数据会分为多个部分，每两个部分之间通过分隔符来分隔，每部分表述均有 HTTP 头部描述子包体，如"),a("code",[t._v("Content-Type")]),t._v("，在最后的分隔符会加上"),a("code",[t._v("--")]),t._v("表示结束。")])]),t._v(" "),a("p",[t._v("相应的"),a("code",[t._v("请求体")]),t._v("是下面这样:")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Content-Disposition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" form-data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("name="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Content-Type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text/plain\ndata1\n----WebkitFormBoundaryRRJKeWfHPGrS4LKe\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Content-Disposition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" form-data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("name="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Content-Type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text/plain\ndata2\n----WebkitFormBoundaryRRJKeWfHPGrS4LKe--\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("值得一提的是，"),a("code",[t._v("multipart/form-data")]),t._v(" 格式最大的特点在于:"),a("strong",[t._v("每一个表单元素都是独立的资源表述")]),t._v("。另外，你可能在写业务的过程中，并没有注意到其中还有"),a("code",[t._v("boundary")]),t._v("的存在，如果你打开抓包工具，确实可以看到不同的表单元素被拆分开了，之所以在平时感觉不到，是以为浏览器和 HTTP 给你封装了这一系列操作。")]),t._v(" "),a("p",[t._v("而且，在实际的场景中，对于图片等文件的上传，基本采用"),a("code",[t._v("multipart/form-data")]),t._v("而不用"),a("code",[t._v("application/x-www-form-urlencoded")]),t._v("，因为没有必要做 URL 编码，带来巨大耗时的同时也占用了更多的空间。")]),t._v(" "),a("h2",{attrs:{id:"_010-http1-1-如何解决-http-的队头阻塞问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_010-http1-1-如何解决-http-的队头阻塞问题"}},[t._v("#")]),t._v(" 010: HTTP1.1 如何解决 HTTP 的队头阻塞问题？")]),t._v(" "),a("h3",{attrs:{id:"什么是-http-队头阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-http-队头阻塞"}},[t._v("#")]),t._v(" 什么是 HTTP 队头阻塞？")]),t._v(" "),a("p",[t._v("从前面的小节可以知道，HTTP 传输是基于"),a("code",[t._v("请求-应答")]),t._v("的模式进行的，报文必须是一发一收，但值得注意的是，里面的任务被放在一个任务队列中串行执行，一旦队首的请求处理太慢，就会阻塞后面请求的处理。这就是著名的"),a("code",[t._v("HTTP队头阻塞")]),t._v("问题。")]),t._v(" "),a("h3",{attrs:{id:"并发连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发连接"}},[t._v("#")]),t._v(" 并发连接")]),t._v(" "),a("p",[t._v("对于一个域名允许分配多个长连接，那么相当于增加了任务队列，不至于一个队伍的任务阻塞其它所有任务。在 RFC2616 规定过客户端最多并发 2 个连接，不过事实上在现在的浏览器标准中，这个上限要多很多，Chrome 中是 6 个。")]),t._v(" "),a("p",[t._v("但其实，即使是提高了并发连接，还是不能满足人们对性能的需求。")]),t._v(" "),a("h3",{attrs:{id:"域名分片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#域名分片"}},[t._v("#")]),t._v(" 域名分片")]),t._v(" "),a("p",[t._v("一个域名不是可以并发 6 个长连接吗？那我就多分几个域名。")]),t._v(" "),a("p",[t._v("比如 content1.sanyuan.com 、content2.sanyuan.com。")]),t._v(" "),a("p",[t._v("这样一个"),a("code",[t._v("sanyuan.com")]),t._v("域名下可以分出非常多的二级域名，而它们都指向同样的一台服务器，能够并发的长连接数更多了，事实上也更好地解决了队头阻塞的问题。")]),t._v(" "),a("h2",{attrs:{id:"_011-对-cookie-了解多少"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_011-对-cookie-了解多少"}},[t._v("#")]),t._v(" 011: 对 Cookie 了解多少？")]),t._v(" "),a("h3",{attrs:{id:"cookie-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie-简介"}},[t._v("#")]),t._v(" Cookie 简介")]),t._v(" "),a("p",[t._v("前面说到了 HTTP 是一个无状态的协议，每次 http 请求都是独立、无关的，默认不需要保留状态信息。但有时候需要保存一些状态，怎么办呢？")]),t._v(" "),a("p",[t._v("HTTP 为此引入了 Cookie。Cookie 本质上就是浏览器里面存储的一个很小的文本文件，内部以键值对的方式来存储(在 chrome 开发者面板的 Application 这一栏可以看到)。向同一个域名下发送请求，都会携带相同的 Cookie，服务器拿到 Cookie 进行解析，便能拿到客户端的状态。而服务端可以通过响应头中的"),a("code",[t._v("Set-Cookie")]),t._v("字段来对客户端写入"),a("code",[t._v("Cookie")]),t._v("。举例如下:")]),t._v(" "),a("div",{staticClass:"language-ini line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("// 请求头\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("Cookie: a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("xxx;b=xxx")]),t._v("\n// 响应头\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("Set-Cookie: a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("xxx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("set-Cookie: b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("xxx")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"cookie-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie-属性"}},[t._v("#")]),t._v(" Cookie 属性")]),t._v(" "),a("h4",{attrs:{id:"生存周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生存周期"}},[t._v("#")]),t._v(" 生存周期")]),t._v(" "),a("p",[t._v("Cookie 的有效期可以通过"),a("strong",[t._v("Expires")]),t._v("和"),a("strong",[t._v("Max-Age")]),t._v("两个属性来设置。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Expires")]),t._v("即"),a("code",[t._v("过期时间")])]),t._v(" "),a("li",[a("strong",[t._v("Max-Age")]),t._v("用的是一段时间间隔，单位是秒，从浏览器收到报文开始计算。")])]),t._v(" "),a("p",[t._v("若 Cookie 过期，则这个 Cookie 会被删除，并不会发送给服务端。")]),t._v(" "),a("h4",{attrs:{id:"作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),a("p",[t._v("关于作用域也有两个属性: "),a("strong",[t._v("Domain")]),t._v("和"),a("strong",[t._v("path")]),t._v(", 给 "),a("strong",[t._v("Cookie")]),t._v(" 绑定了域名和路径，在发送请求之前，发现域名或者路径和这两个属性不匹配，那么就不会带上 Cookie。值得注意的是，对于路径来说，"),a("code",[t._v("/")]),t._v("表示域名下的任意路径都允许使用 Cookie。")]),t._v(" "),a("h4",{attrs:{id:"安全相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全相关"}},[t._v("#")]),t._v(" 安全相关")]),t._v(" "),a("p",[t._v("如果带上"),a("code",[t._v("Secure")]),t._v("，说明只能通过 HTTPS 传输 cookie。")]),t._v(" "),a("p",[t._v("如果 cookie 字段带上"),a("code",[t._v("HttpOnly")]),t._v("，那么说明只能通过 HTTP 协议传输，不能通过 JS 访问，这也是预防 XSS 攻击的重要手段。")]),t._v(" "),a("p",[t._v("相应的，对于 CSRF 攻击的预防，也有"),a("code",[t._v("SameSite")]),t._v("属性。")]),t._v(" "),a("p",[a("code",[t._v("SameSite")]),t._v("可以设置为三个值，"),a("code",[t._v("Strict")]),t._v("、"),a("code",[t._v("Lax")]),t._v("和"),a("code",[t._v("None")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("a.")]),t._v(" 在"),a("code",[t._v("Strict")]),t._v("模式下，浏览器完全禁止第三方请求携带 Cookie。比如请求"),a("code",[t._v("sanyuan.com")]),t._v("网站只能在"),a("code",[t._v("sanyuan.com")]),t._v("域名当中请求才能携带 Cookie，在其他网站请求都不能。")]),t._v(" "),a("p",[a("strong",[t._v("b.")]),t._v(" 在"),a("code",[t._v("Lax")]),t._v("模式，就宽松一点了，但是只能在 "),a("code",[t._v("get 方法提交表单")]),t._v("况或者"),a("code",[t._v("a 标签发送 get 请求")]),t._v("的情况下可以携带 Cookie，其他情况均不能。")]),t._v(" "),a("p",[a("strong",[t._v("c.")]),t._v(" 在"),a("code",[t._v("None")]),t._v("模式下，也就是默认模式，请求会自动携带上 Cookie。")]),t._v(" "),a("h3",{attrs:{id:"cookie-的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie-的缺点"}},[t._v("#")]),t._v(" Cookie 的缺点")]),t._v(" "),a("ol",[a("li",[t._v("容量缺陷。Cookie 的体积上限只有"),a("code",[t._v("4KB")]),t._v("，只能用来存储少量的信息。")]),t._v(" "),a("li",[t._v("性能缺陷。Cookie 紧跟域名，不管域名下面的某一个地址需不需要这个 Cookie ，请求都会携带上完整的 Cookie，这样随着请求数的增多，其实会造成巨大的性能浪费的，因为请求携带了很多不必要的内容。但可以通过"),a("code",[t._v("Domain")]),t._v("和"),a("code",[t._v("Path")]),t._v("指定"),a("strong",[t._v("作用域")]),t._v("来解决。")]),t._v(" "),a("li",[t._v("安全缺陷。由于 Cookie 以纯文本的形式在浏览器和服务器中传递，很容易被非法用户截获，然后进行一系列的篡改，在 Cookie 的有效期内重新发送给服务器，这是相当危险的。另外，在"),a("code",[t._v("HttpOnly")]),t._v("为 false 的情况下，Cookie 信息能直接通过 JS 脚本来读取。")])]),t._v(" "),a("h2",{attrs:{id:"_012-如何理解-http-代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_012-如何理解-http-代理"}},[t._v("#")]),t._v(" 012: 如何理解 HTTP 代理？")]),t._v(" "),a("p",[t._v("我们知道在 HTTP 是基于"),a("code",[t._v("请求-响应")]),t._v("模型的协议，一般由客户端发请求，服务器来进行响应。")]),t._v(" "),a("p",[t._v("当然，也有特殊情况，就是代理服务器的情况。引入代理之后，作为代理的服务器相当于一个中间人的角色，对于客户端而言，表现为服务器进行响应；而对于源服务器，表现为客户端发起请求，具有"),a("strong",[t._v("双重身份")]),t._v("。")]),t._v(" "),a("p",[t._v("那代理服务器到底是用来做什么的呢？")]),t._v(" "),a("h3",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[t._v("#")]),t._v(" 功能")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("负载均衡")]),t._v("。客户端的请求只会先到达代理服务器，后面到底有多少源服务器，IP 都是多少，客户端是不知道的。因此，这个代理服务器可以拿到这个请求之后，可以通过特定的算法分发给不同的源服务器，让各台源服务器的负载尽量平均。当然，这样的算法有很多，包括"),a("strong",[t._v("随机算法")]),t._v("、"),a("strong",[t._v("轮询")]),t._v("、"),a("strong",[t._v("一致性 hash")]),t._v("、"),a("strong",[t._v("LRU")]),a("code",[t._v("(最近最少使用)")]),t._v("等等，不过这些算法并不是本文的重点，大家有兴趣自己可以研究一下。")]),t._v(" "),a("li",[a("strong",[t._v("保障安全")]),t._v("。利用"),a("strong",[t._v("心跳")]),t._v("机制监控后台的服务器，一旦发现故障机就将其踢出集群。并且对于上下行的数据进行过滤，对非法 IP 限流，这些都是代理服务器的工作。")]),t._v(" "),a("li",[a("strong",[t._v("缓存代理")]),t._v("。将内容缓存到代理服务器，使得客户端可以直接从代理服务器获得而不用到源服务器那里。下一节详细拆解。")])]),t._v(" "),a("h3",{attrs:{id:"相关头部字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关头部字段"}},[t._v("#")]),t._v(" 相关头部字段")]),t._v(" "),a("h4",{attrs:{id:"via"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#via"}},[t._v("#")]),t._v(" Via")]),t._v(" "),a("p",[t._v("代理服务器需要标明自己的身份，在 HTTP 传输中留下自己的痕迹，怎么办呢？")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("Via")]),t._v("字段来记录。举个例子，现在中间有两台代理服务器，在客户端发送请求后会经历这样一个过程:")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[t._v("客户端 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" 代理"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" 代理"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" 源服务器\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("在源服务器收到请求后，会在"),a("code",[t._v("请求头")]),t._v("拿到这个字段:")]),t._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Via")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" proxy_server1, proxy_server2\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("而源服务器响应时，最终在客户端会拿到这样的"),a("code",[t._v("响应头")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Via")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" proxy_server2, proxy_server1\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("可以看到，"),a("code",[t._v("Via")]),t._v("中代理的顺序即为在 HTTP 传输中报文传达的顺序。")]),t._v(" "),a("h4",{attrs:{id:"x-forwarded-for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-forwarded-for"}},[t._v("#")]),t._v(" X-Forwarded-For")]),t._v(" "),a("p",[t._v("字面意思就是"),a("code",[t._v("为谁转发")]),t._v(", 它记录的是"),a("strong",[t._v("请求方")]),t._v("的"),a("code",[t._v("IP")]),t._v("地址(注意，和"),a("code",[t._v("Via")]),t._v("区分开，"),a("code",[t._v("X-Forwarded-For")]),t._v("记录的是请求方这一个 IP)。")]),t._v(" "),a("h4",{attrs:{id:"x-real-ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-real-ip"}},[t._v("#")]),t._v(" X-Real-IP")]),t._v(" "),a("p",[t._v("是一种获取用户真实 IP 的字段，不管中间经过多少代理，这个字段始终记录最初的客户端的 IP。")]),t._v(" "),a("p",[t._v("相应的，还有"),a("code",[t._v("X-Forwarded-Host")]),t._v("和"),a("code",[t._v("X-Forwarded-Proto")]),t._v("，分别记录"),a("strong",[t._v("客户端")]),t._v("(注意哦，不包括代理)的"),a("code",[t._v("域名")]),t._v("和"),a("code",[t._v("协议名")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"x-forwarded-for-产生的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-forwarded-for-产生的问题"}},[t._v("#")]),t._v(" X-Forwarded-For 产生的问题")]),t._v(" "),a("p",[t._v("前面可以看到，"),a("code",[t._v("X-Forwarded-For")]),t._v("这个字段记录的是请求方的 IP，这意味着每经过一个不同的代理，这个字段的名字都要变，从"),a("code",[t._v("客户端")]),t._v("到"),a("code",[t._v("代理1")]),t._v("，这个字段是客户端的 IP，从"),a("code",[t._v("代理1")]),t._v("到"),a("code",[t._v("代理2")]),t._v("，这个字段就变为了代理 1 的 IP。")]),t._v(" "),a("p",[t._v("但是这会产生两个问题:")]),t._v(" "),a("ol",[a("li",[t._v("意味着代理必须解析 HTTP 请求头，然后修改，比直接转发数据性能下降。")]),t._v(" "),a("li",[t._v("在 HTTPS 通信加密的过程中，原始报文是不允许修改的。")])]),t._v(" "),a("p",[t._v("由此产生了"),a("code",[t._v("代理协议")]),t._v("，一般使用明文版本，只需要在 HTTP 请求行上面加上这样格式的文本即可:")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("// PROXY + TCP4/TCP6 + 请求方地址 + 接收方地址 + 请求端口 + 接收端口\nPROXY TCP4 0.0.0.1 0.0.0.2 1111 2222\nGET / HTTP/1.1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("这样就可以解决"),a("code",[t._v("X-Forwarded-For")]),t._v("带来的问题了。")]),t._v(" "),a("h2",{attrs:{id:"_013-如何理解-http-缓存及缓存代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_013-如何理解-http-缓存及缓存代理"}},[t._v("#")]),t._v(" 013: 如何理解 HTTP 缓存及缓存代理？")]),t._v(" "),a("p",[t._v("首先通过 "),a("code",[t._v("Cache-Control")]),t._v(" 验证强缓存是否可用")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果强缓存可用，直接使用")])]),t._v(" "),a("li",[a("p",[t._v("否则进入协商缓存，即发送 HTTP 请求，服务器通过请求头中的")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("If-Modified-Since\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("或者")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("If-None-Match\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这些")]),t._v(" "),a("p",[t._v("条件请求")]),t._v(" "),a("p",[t._v("字段检查资源是否更新")]),t._v(" "),a("ul",[a("li",[t._v("若资源更新，返回资源和 200 状态码")]),t._v(" "),a("li",[t._v("否则，返回 304，告诉浏览器直接从缓存获取资源")])])])]),t._v(" "),a("p",[t._v("这一节我们主要来说说另外一种缓存方式: "),a("strong",[t._v("代理缓存")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"为什么产生代理缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么产生代理缓存"}},[t._v("#")]),t._v(" 为什么产生代理缓存？")]),t._v(" "),a("p",[t._v("对于源服务器来说，它也是有缓存的，比如"),a("strong",[t._v("Redis, Memcache")]),t._v("，但对于 HTTP 缓存来说，如果每次客户端缓存失效都要到源服务器获取，那给源服务器的压力是很大的。")]),t._v(" "),a("p",[t._v("由此引入了"),a("strong",[t._v("缓存代理")]),t._v("的机制。让"),a("code",[t._v("代理服务器")]),t._v("接管一部分的服务端 HTTP 缓存，客户端缓存过期后"),a("strong",[t._v("就近")]),t._v("到代理缓存中获取，代理缓存过期了才请求源服务器，这样流量巨大的时候能明显降低源服务器的压力。")]),t._v(" "),a("p",[t._v("那缓存代理究竟是如何做到的呢？")]),t._v(" "),a("p",[t._v("总的来说，缓存代理的控制分为两部分，一部分是"),a("strong",[t._v("源服务器")]),t._v("端的控制，一部分是"),a("strong",[t._v("客户端")]),t._v("的控制。")]),t._v(" "),a("h3",{attrs:{id:"源服务器的缓存控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源服务器的缓存控制"}},[t._v("#")]),t._v(" 源服务器的缓存控制")]),t._v(" "),a("h4",{attrs:{id:"private-和-public"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#private-和-public"}},[t._v("#")]),t._v(" private 和 public")]),t._v(" "),a("p",[t._v("在源服务器的响应头中，会加上"),a("code",[t._v("Cache-Control")]),t._v("这个字段进行缓存控制字段，那么它的值当中可以加入"),a("code",[t._v("private")]),t._v("或者"),a("code",[t._v("public")]),t._v("表示是否允许代理服务器缓存，前者禁止，后者为允许。")]),t._v(" "),a("p",[t._v("比如对于一些非常私密的数据，如果缓存到代理服务器，别人直接访问代理就可以拿到这些数据，是非常危险的，因此对于这些数据一般是不会允许代理服务器进行缓存的，将响应头部的"),a("code",[t._v("Cache-Control")]),t._v("设为"),a("code",[t._v("private")]),t._v("，而不是"),a("code",[t._v("public")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"proxy-revalidate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxy-revalidate"}},[t._v("#")]),t._v(" proxy-revalidate")]),t._v(" "),a("p",[a("code",[t._v("must-revalidate")]),t._v("的意思是"),a("strong",[t._v("客户端")]),t._v("缓存过期就去源服务器获取，而"),a("code",[t._v("proxy-revalidate")]),t._v("则表示"),a("strong",[t._v("代理服务器")]),t._v("的缓存过期后到源服务器获取。")]),t._v(" "),a("h4",{attrs:{id:"s-maxage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#s-maxage"}},[t._v("#")]),t._v(" s-maxage")]),t._v(" "),a("p",[a("code",[t._v("s")]),t._v("是"),a("code",[t._v("share")]),t._v("的意思，限定了缓存在代理服务器中可以存放多久，和限制客户端缓存时间的"),a("code",[t._v("max-age")]),t._v("并不冲突。")]),t._v(" "),a("p",[t._v("讲了这几个字段，我们不妨来举个小例子，源服务器在响应头中加入这样一个字段:")]),t._v(" "),a("div",{staticClass:"language-arduino line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-arduino"}},[a("code",[t._v("Cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" public"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("maxage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("相当于源服务器说: 我这个响应是允许代理服务器缓存的，客户端缓存过期了到代理中拿，并且在客户端的缓存时间为 1000 秒，在代理服务器中的缓存时间为 2000 s。")]),t._v(" "),a("h3",{attrs:{id:"客户端的缓存控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端的缓存控制"}},[t._v("#")]),t._v(" 客户端的缓存控制")]),t._v(" "),a("h4",{attrs:{id:"max-stale-和-min-fresh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#max-stale-和-min-fresh"}},[t._v("#")]),t._v(" max-stale 和 min-fresh")]),t._v(" "),a("p",[t._v("在客户端的请求头中，可以加入这两个字段，来对代理服务器上的缓存进行"),a("strong",[t._v("宽容")]),t._v("和"),a("strong",[t._v("限制")]),t._v("操作。比如：")]),t._v(" "),a("div",{staticClass:"language-arduino line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-arduino"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("stale"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("表示客户端到代理服务器上拿缓存的时候，即使代理缓存过期了也不要紧，只要过期时间在"),a("strong",[t._v("5 秒之内")]),t._v("，还是可以从代理中获取的。")]),t._v(" "),a("p",[t._v("又比如:")]),t._v(" "),a("div",{staticClass:"language-arduino line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-arduino"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fresh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("表示代理缓存需要一定的新鲜度，不要等到缓存刚好到期再拿，一定要在"),a("strong",[t._v("到期前 5 秒")]),t._v("之前的时间拿，否则拿不到。")]),t._v(" "),a("h4",{attrs:{id:"only-if-cached"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#only-if-cached"}},[t._v("#")]),t._v(" only-if-cached")]),t._v(" "),a("p",[t._v("这个字段加上后表示客户端只会接受代理缓存，而不会接受源服务器的响应。如果代理缓存无效，则直接返回"),a("code",[t._v("504（Gateway Timeout）")]),t._v("。")]),t._v(" "),a("p",[t._v("以上便是缓存代理的内容，涉及的字段比较多，希望能好好回顾一下，加深理解。")]),t._v(" "),a("h2",{attrs:{id:"_014-什么是跨域-浏览器如何拦截响应-如何解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_014-什么是跨域-浏览器如何拦截响应-如何解决"}},[t._v("#")]),t._v(" 014: 什么是跨域？浏览器如何拦截响应？如何解决？")]),t._v(" "),a("p",[t._v("在前后端分离的开发模式中，经常会遇到跨域问题，即 Ajax 请求发出去了，服务器也成功响应了，前端就是拿不到这个响应。接下来我们就来好好讨论一下这个问题。")]),t._v(" "),a("h3",{attrs:{id:"什么是跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域"}},[t._v("#")]),t._v(" 什么是跨域")]),t._v(" "),a("p",[t._v("回顾一下 URI 的组成:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd7ac23846fe~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("浏览器遵循"),a("strong",[t._v("同源政策")]),t._v("("),a("code",[t._v("scheme(协议)")]),t._v("、"),a("code",[t._v("host(主机)")]),t._v("和"),a("code",[t._v("port(端口)")]),t._v("都相同则为"),a("code",[t._v("同源")]),t._v(")。非同源站点有这样一些限制:")]),t._v(" "),a("ul",[a("li",[t._v("不能读取和修改对方的 DOM")]),t._v(" "),a("li",[t._v("不读访问对方的 Cookie、IndexDB 和 LocalStorage")]),t._v(" "),a("li",[t._v("限制 XMLHttpRequest 请求。(后面的话题着重围绕这个)")])]),t._v(" "),a("p",[t._v("当浏览器向目标 URI 发 Ajax 请求时，只要当前 URL 和目标 URL 不同源，则产生跨域，被称为"),a("code",[t._v("跨域请求")]),t._v("。")]),t._v(" "),a("p",[t._v("跨域请求的响应一般会被浏览器所拦截，注意，是被浏览器拦截，响应其实是成功到达客户端了。那这个拦截是如何发生呢？")]),t._v(" "),a("p",[t._v("首先要知道的是，浏览器是多进程的，以 Chrome 为例，进程组成如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd8131a4628f~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd83a20647db~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v("WebKit 渲染引擎")]),t._v("和"),a("strong",[t._v("V8 引擎")]),t._v("都在渲染进程当中。")]),t._v(" "),a("p",[t._v("当"),a("code",[t._v("xhr.send")]),t._v("被调用，即 Ajax 请求准备发送的时候，其实还只是在渲染进程的处理。为了防止黑客通过脚本触碰到系统资源，浏览器将每一个渲染进程装进了沙箱，并且为了防止 CPU 芯片一直存在的"),a("strong",[t._v("Spectre")]),t._v(" 和 "),a("strong",[t._v("Meltdown")]),t._v("漏洞，采取了"),a("code",[t._v("站点隔离")]),t._v("的手段，给每一个不同的站点(一级域名不同)分配了沙箱，互不干扰。具体见"),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DdBuykrdhK-A%26feature%3Demb_logo",target:"_blank",rel:"noopener noreferrer"}},[t._v("YouTube 上 Chromium 安全团队的演讲视频"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("在沙箱当中的渲染进程是没有办法发送网络请求的，那怎么办？只能通过网络进程来发送。那这样就涉及到进程间通信(IPC，Inter Process Communication)了。接下来我们看看 chromium 当中进程间通信是如何完成的，在 chromium 源码中调用顺序如下:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd924eaecb41~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("可能看了你会比较懵，如果想深入了解可以去看看 chromium 最新的源代码，"),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fchromium.googlesource.com%2Fchromium%2Fsrc%2F%2B%2Frefs%2Fheads%2Fmaster%2Fipc%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC 源码地址"),a("OutboundLink")],1),t._v("及"),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2FLuoshengyang%2Farticle%2Fdetails%2F47822689",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chromium IPC 源码解析文章"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("总的来说就是利用"),a("code",[t._v("Unix Domain Socket")]),t._v("套接字，配合事件驱动的高性能网络并发库"),a("code",[t._v("libevent")]),t._v("完成进程的 IPC 过程。")]),t._v(" "),a("p",[t._v("好，现在数据传递给了浏览器主进程，主进程接收到后，才真正地发出相应的网络请求。")]),t._v(" "),a("p",[t._v("在服务端处理完数据后，将响应返回，主进程检查到跨域，且没有 cors(后面会详细说)响应头，将响应体全部丢掉，并不会发送给渲染进程。这就达到了拦截数据的目的。")]),t._v(" "),a("p",[t._v("接下来我们来说一说解决跨域问题的几种方案。")]),t._v(" "),a("h3",{attrs:{id:"cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),a("p",[t._v("CORS 其实是 W3C 的一个标准，全称是"),a("code",[t._v("跨域资源共享")]),t._v("。它需要浏览器和服务器的共同支持，具体来说，非 IE 和 IE10 以上支持 CORS，服务器需要附加特定的响应头，后面具体拆解。不过在弄清楚 CORS 的原理之前，我们需要清楚两个概念: "),a("strong",[t._v("简单请求")]),t._v("和"),a("strong",[t._v("非简单请求")]),t._v("。")]),t._v(" "),a("p",[t._v("浏览器根据请求方法和请求头的特定字段，将请求做了一下分类，具体来说规则是这样，凡是满足下面条件的属于"),a("strong",[t._v("简单请求")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("请求方法为 GET、POST 或者 HEAD")]),t._v(" "),a("li",[t._v("请求头的取值范围: Accept、Accept-Language、Content-Language、Content-Type(只限于三个值"),a("code",[t._v("application/x-www-form-urlencoded")]),t._v("、"),a("code",[t._v("multipart/form-data")]),t._v("、"),a("code",[t._v("text/plain")]),t._v(")")])]),t._v(" "),a("p",[t._v("浏览器画了这样一个圈，在这个圈里面的就是"),a("strong",[t._v("简单请求")]),t._v(", 圈外面的就是"),a("strong",[t._v("非简单请求")]),t._v("，然后针对这两种不同的请求进行不同的处理。")]),t._v(" "),a("h4",{attrs:{id:"简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单请求"}},[t._v("#")]),t._v(" 简单请求")]),t._v(" "),a("p",[t._v("请求发出去之前，浏览器做了什么？")]),t._v(" "),a("p",[t._v("它会自动在请求头当中，添加一个"),a("code",[t._v("Origin")]),t._v("字段，用来说明请求来自哪个"),a("code",[t._v("源")]),t._v("。服务器拿到请求之后，在回应时对应地添加"),a("code",[t._v("Access-Control-Allow-Origin")]),t._v("字段，如果"),a("code",[t._v("Origin")]),t._v("不在这个字段的范围中，那么浏览器就会将响应拦截。")]),t._v(" "),a("p",[t._v("因此，"),a("code",[t._v("Access-Control-Allow-Origin")]),t._v("字段是服务器用来决定浏览器是否拦截这个响应，这是必需的字段。与此同时，其它一些可选的功能性的字段，用来描述如果不会拦截，这些字段将会发挥各自的作用。")]),t._v(" "),a("p",[a("strong",[t._v("Access-Control-Allow-Credentials")]),t._v("。这个字段是一个布尔值，表示是否允许发送 Cookie，对于跨域请求，浏览器对这个字段默认值设为 false，而如果需要拿到浏览器的 Cookie，需要添加这个响应头并设为"),a("code",[t._v("true")]),t._v(", 并且在前端也需要设置"),a("code",[t._v("withCredentials")]),t._v("属性:")]),t._v(" "),a("div",{staticClass:"language-ini line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("let xhr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("new XMLHttpRequest();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("xhr.withCredentials")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true;")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("strong",[t._v("Access-Control-Expose-Headers")]),t._v("。这个字段是给 XMLHttpRequest 对象赋能，让它不仅可以拿到基本的 6 个响应头字段（包括"),a("code",[t._v("Cache-Control")]),t._v("、"),a("code",[t._v("Content-Language")]),t._v("、"),a("code",[t._v("Content-Type")]),t._v("、"),a("code",[t._v("Expires")]),t._v("、"),a("code",[t._v("Last-Modified")]),t._v("和"),a("code",[t._v("Pragma")]),t._v("）, 还能拿到这个字段声明的"),a("strong",[t._v("响应头字段")]),t._v("。比如这样设置:")]),t._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Access-Control-Expose-Headers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" aaa\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("那么在前端可以通过 "),a("code",[t._v("XMLHttpRequest.getResponseHeader('aaa')")]),t._v(" 拿到 "),a("code",[t._v("aaa")]),t._v(" 这个字段的值。")]),t._v(" "),a("h4",{attrs:{id:"非简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非简单请求"}},[t._v("#")]),t._v(" 非简单请求")]),t._v(" "),a("p",[t._v("非简单请求相对而言会有些不同，体现在两个方面: "),a("strong",[t._v("预检请求")]),t._v("和"),a("strong",[t._v("响应字段")]),t._v("。")]),t._v(" "),a("p",[t._v("我们以 PUT 方法为例。")]),t._v(" "),a("div",{staticClass:"language-ini line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("var url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("'http://xxx.com';")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("var xhr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("new XMLHttpRequest();")]),t._v("\nxhr.open('PUT', url, true);\nxhr.setRequestHeader('X-Custom-Header', 'xxx');\nxhr.send();\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("当这段代码执行后，首先会发送"),a("strong",[t._v("预检请求")]),t._v("。这个预检请求的请求行和请求体是下面这个格式:")]),t._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[t._v("OPTIONS / HTTP/1.1\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 当前地址\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx.com\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Access-Control-Request-Method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PUT\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("Access-Control-Request-Headers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" X-Custom-Header\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("预检请求的方法是"),a("code",[t._v("OPTIONS")]),t._v("，同时会加上"),a("code",[t._v("Origin")]),t._v("源地址和"),a("code",[t._v("Host")]),t._v("目标地址，这很简单。同时也会加上两个关键的字段:")]),t._v(" "),a("ul",[a("li",[t._v("Access-Control-Request-Method, 列出 CORS 请求用到哪个 HTTP 方法")]),t._v(" "),a("li",[t._v("Access-Control-Request-Headers，指定 CORS 请求将要加上什么请求头")])]),t._v(" "),a("p",[t._v("这是"),a("code",[t._v("预检请求")]),t._v("。接下来是"),a("strong",[t._v("响应字段")]),t._v("，响应字段也分为两部分，一部分是对于"),a("strong",[t._v("预检请求")]),t._v("的响应，一部分是对于 "),a("strong",[t._v("CORS 请求")]),t._v("的响应。")]),t._v(" "),a("p",[a("strong",[t._v("预检请求的响应")]),t._v("。如下面的格式:")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("HTTP/1.1 200 OK\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Access-Control-Allow-Origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" *\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Access-Control-Allow-Methods")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" GET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" POST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PUT\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Access-Control-Allow-Headers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" X"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Custom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Header\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Access-Control-Allow-Credentials")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Access-Control-Max-Age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1728000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Content-Type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text/html; charset=utf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Content-Encoding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gzip\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Content-Length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("其中有这样几个关键的"),a("strong",[t._v("响应头字段")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("Access-Control-Allow-Origin: 表示可以允许请求的源，可以填具体的源名，也可以填"),a("code",[t._v("*")]),t._v("表示允许任意源请求。")]),t._v(" "),a("li",[t._v("Access-Control-Allow-Methods: 表示允许的请求方法列表。")]),t._v(" "),a("li",[t._v("Access-Control-Allow-Credentials: 简单请求中已经介绍。")]),t._v(" "),a("li",[t._v("Access-Control-Allow-Headers: 表示允许发送的请求头字段")]),t._v(" "),a("li",[t._v("Access-Control-Max-Age: 预检请求的有效期，在此期间，不用发出另外一条预检请求。")])]),t._v(" "),a("p",[t._v("在预检请求的响应返回后，如果请求不满足响应头的条件，则触发"),a("code",[t._v("XMLHttpRequest")]),t._v("的"),a("code",[t._v("onerror")]),t._v("方法，当然后面真正的"),a("strong",[t._v("CORS 请求")]),t._v("也不会发出去了。")]),t._v(" "),a("p",[a("strong",[t._v("CORS 请求的响应")]),t._v("。绕了这么一大转，到了真正的 CORS 请求就容易多了，现在它和"),a("strong",[t._v("简单请求")]),t._v("的情况是一样的。浏览器自动加上"),a("code",[t._v("Origin")]),t._v("字段，服务端响应头返回"),a("strong",[t._v("Access-Control-Allow-Origin")]),t._v("。可以参考以上简单请求部分的内容。")]),t._v(" "),a("h3",{attrs:{id:"jsonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsonp"}},[t._v("#")]),t._v(" JSONP")]),t._v(" "),a("p",[t._v("虽然"),a("code",[t._v("XMLHttpRequest")]),t._v("对象遵循同源政策，但是"),a("code",[t._v("script")]),t._v("标签不一样，它可以通过 src 填上目标地址从而发出 GET 请求，实现跨域请求并拿到响应。这也就是 JSONP 的原理，接下来我们就来封装一个 JSONP:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("jsonp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callbackName "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("generateURL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dataStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dataStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    dataStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("callback=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("callbackName"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("dataStr"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化回调函数名称")]),t._v("\n    callbackName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callbackName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 script 元素并加入到当前文档中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" scriptEle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    scriptEle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateURL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scriptEle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绑定到 window 上，为了后面调用")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("callbackName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// script 执行完了，成为无用元素，需要清除")]),t._v("\n      document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scriptEle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n复制代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])]),a("p",[t._v("当然在服务端也会有响应的操作, 以 express 为例:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" express "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"express"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意哦，返回给script标签，浏览器直接把这部分字符串执行")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("('数据包')")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n复制代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("前端这样简单地调用一下就好了:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:3000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("params")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拿到数据进行处理")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n复制代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("和"),a("code",[t._v("CORS")]),t._v("相比，JSONP 最大的优势在于兼容性好，IE 低版本不能使用 CORS 但可以使用 JSONP，缺点也很明显，请求方法单一，只支持 GET 请求。")]),t._v(" "),a("h3",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),a("p",[t._v("Nginx 是一种高性能的"),a("code",[t._v("反向代理")]),t._v("服务器，可以用来轻松解决跨域问题。")]),t._v(" "),a("p",[t._v("what？反向代理？我给你看一张图你就懂了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffd97d0b1cf15~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("正向代理帮助客户端"),a("strong",[t._v("访问")]),t._v("客户端自己访问不到的服务器，然后将结果返回给客户端。")]),t._v(" "),a("p",[t._v("反向代理拿到客户端的请求，将请求转发给其他的服务器，主要的场景是维持服务器集群的"),a("strong",[t._v("负载均衡")]),t._v("，换句话说，反向代理帮"),a("strong",[t._v("其它的服务器")]),t._v("拿到请求，然后选择一个合适的服务器，将请求转交给它。")]),t._v(" "),a("p",[t._v("因此，两者的区别就很明显了，正向代理服务器是帮"),a("strong",[t._v("客户端")]),t._v("做事情，而反向代理服务器是帮其它的"),a("strong",[t._v("服务器")]),t._v("做事情。")]),t._v(" "),a("p",[t._v("好了，那 Nginx 是如何来解决跨域的呢？")]),t._v(" "),a("p",[t._v("比如说现在客户端的域名为"),a("strong",[t._v("client.com")]),t._v("，服务器的域名为"),a("strong",[t._v("server.com")]),t._v("，客户端向服务器发送 Ajax 请求，当然会跨域了，那这个时候让 Nginx 登场了，通过下面这个配置:")]),t._v(" "),a("div",{staticClass:"language-ini line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("server {\n  listen  80;\n  server_name  client.com;\n  location /api {\n    proxy_pass server.com;\n  }\n}\n复制代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("Nginx 相当于起了一个跳板机，这个跳板机的域名也是"),a("code",[t._v("client.com")]),t._v("，让客户端首先访问 "),a("code",[t._v("client.com/api")]),t._v("，这当然没有跨域，然后 Nginx 服务器作为反向代理，将请求转发给"),a("code",[t._v("server.com")]),t._v("，当响应返回时又将响应给到客户端，这就完成整个跨域请求的过程。")]),t._v(" "),a("p",[t._v("其实还有一些不太常用的方式，大家了解即可，比如"),a("code",[t._v("postMessage")]),t._v("，当然"),a("code",[t._v("WebSocket")]),t._v("也是一种方式，但是已经不属于 HTTP 的范畴，另外一些奇技淫巧就不建议大家去死记硬背了，一方面从来不用，名字都难得记住，另一方面临时背下来，面试官也不会对你印象加分，因为看得出来是背的。当然没有背并不代表减分，把跨域原理和前面三种主要的跨域方式理解清楚，经得起更深一步的推敲，反而会让别人觉得你是一个靠谱的人。")]),t._v(" "),a("h2",{attrs:{id:"_015-http-2-有哪些改进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_015-http-2-有哪些改进"}},[t._v("#")]),t._v(" 015: HTTP/2 有哪些改进？")]),t._v(" "),a("p",[t._v("由于 HTTPS 在安全方面已经做的非常好了，HTTP 改进的关注点放在了性能方面。对于 HTTP/2 而言，它对于性能的提升主要在于两点:")]),t._v(" "),a("ul",[a("li",[t._v("头部压缩")]),t._v(" "),a("li",[t._v("多路复用")])]),t._v(" "),a("p",[t._v("当然还有一些颠覆性的功能实现:")]),t._v(" "),a("ul",[a("li",[t._v("设置请求优先级")]),t._v(" "),a("li",[t._v("服务器推送")])]),t._v(" "),a("p",[t._v("这些重大的提升本质上也是为了解决 HTTP 本身的问题而产生的。接下来我们来看看 HTTP/2 解决了哪些问题，以及解决方式具体是如何的。")]),t._v(" "),a("h3",{attrs:{id:"头部压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头部压缩"}},[t._v("#")]),t._v(" 头部压缩")]),t._v(" "),a("p",[t._v("在 HTTP/1.1 及之前的时代，"),a("strong",[t._v("请求体")]),t._v("一般会有响应的压缩编码过程，通过"),a("code",[t._v("Content-Encoding")]),t._v("头部字段来指定，但你有没有想过头部字段本身的压缩呢？当请求字段非常复杂的时候，尤其对于 GET 请求，请求报文几乎全是请求头，这个时候还是存在非常大的优化空间的。HTTP/2 针对头部字段，也采用了对应的压缩算法——HPACK，对请求头进行压缩。")]),t._v(" "),a("p",[t._v("HPACK 算法是专门为 HTTP/2 服务的，它主要的亮点有两个：")]),t._v(" "),a("ul",[a("li",[t._v("首先是在服务器和客户端之间建立哈希表，将用到的字段存放在这张表中，那么在传输的时候对于之前出现过的值，只需要把"),a("strong",[t._v("索引")]),t._v("(比如 0，1，2，...)传给对方即可，对方拿到索引查表就行了。这种"),a("strong",[t._v("传索引")]),t._v("的方式，可以说让请求头字段得到极大程度的精简和复用。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffdaa6f41c004~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("blockquote",[a("p",[t._v('HTTP/2 当中废除了起始行的概念，将起始行中的请求方法、URI、状态码转换成了头字段，不过这些字段都有一个":"前缀，用来和其它请求头区分开。')])]),t._v(" "),a("ul",[a("li",[t._v("其次是对于整数和字符串进行"),a("strong",[t._v("哈夫曼编码")]),t._v("，哈夫曼编码的原理就是先将所有出现的字符建立一张索引表，然后让出现次数多的字符对应的索引尽可能短，传输的时候也是传输这样的"),a("strong",[t._v("索引序列")]),t._v("，可以达到非常高的压缩率。")])]),t._v(" "),a("h3",{attrs:{id:"多路复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多路复用"}},[t._v("#")]),t._v(" 多路复用")]),t._v(" "),a("h4",{attrs:{id:"http-队头阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-队头阻塞"}},[t._v("#")]),t._v(" HTTP 队头阻塞")]),t._v(" "),a("p",[t._v("我们之前讨论了 HTTP 队头阻塞的问题，其根本原因在于 HTTP 基于"),a("code",[t._v("请求-响应")]),t._v("的模型，在同一个 TCP 长连接中，前面的请求没有得到响应，后面的请求就会被阻塞。")]),t._v(" "),a("p",[t._v("后面我们又讨论到用"),a("strong",[t._v("并发连接")]),t._v("和"),a("strong",[t._v("域名分片")]),t._v("的方式来解决这个问题，但这并没有真正从 HTTP 本身的层面解决问题，只是增加了 TCP 连接，分摊风险而已。而且这么做也有弊端，多条 TCP 连接会竞争"),a("strong",[t._v("有限的带宽")]),t._v("，让真正优先级高的请求不能优先处理。")]),t._v(" "),a("p",[t._v("而 HTTP/2 便从 HTTP 协议本身解决了"),a("code",[t._v("队头阻塞")]),t._v("问题。注意，这里并不是指的"),a("code",[t._v("TCP队头阻塞")]),t._v("，而是"),a("code",[t._v("HTTP队头阻塞")]),t._v("，两者并不是一回事。TCP 的队头阻塞是在"),a("code",[t._v("数据包")]),t._v("层面，单位是"),a("code",[t._v("数据包")]),t._v("，前一个报文没有收到便不会将后面收到的报文上传给 HTTP，而 HTTP 的队头阻塞是在 "),a("code",[t._v("HTTP 请求-响应")]),t._v("层面，前一个请求没处理完，后面的请求就要阻塞住。两者所在的层次不一样。")]),t._v(" "),a("p",[t._v("那么 HTTP/2 如何来解决所谓的队头阻塞呢？")]),t._v(" "),a("h4",{attrs:{id:"二进制分帧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制分帧"}},[t._v("#")]),t._v(" 二进制分帧")]),t._v(" "),a("p",[t._v("首先，HTTP/2 认为明文传输对机器而言太麻烦了，不方便计算机的解析，因为对于文本而言会有多义性的字符，比如回车换行到底是内容还是分隔符，在内部需要用到状态机去识别，效率比较低。于是 HTTP/2 干脆把报文全部换成二进制格式，全部传输"),a("code",[t._v("01")]),t._v("串，方便了机器的解析。")]),t._v(" "),a("p",[t._v("原来"),a("code",[t._v("Headers + Body")]),t._v("的报文格式如今被拆分成了一个个二进制的帧，用"),a("strong",[t._v("Headers 帧")]),t._v("存放头部字段，"),a("strong",[t._v("Data 帧")]),t._v("存放请求体数据。分帧之后，服务器看到的不再是一个个完整的 HTTP 请求报文，而是一堆乱序的二进制帧。这些二进制帧不存在先后关系，因此也就不会排队等待，也就没有了 HTTP 的队头阻塞问题。")]),t._v(" "),a("p",[t._v("通信双方都可以给对方发送二进制帧，这种二进制帧的"),a("strong",[t._v("双向传输的序列")]),t._v("，也叫做"),a("code",[t._v("流")]),t._v("(Stream)。HTTP/2 用"),a("code",[t._v("流")]),t._v("来在一个 TCP 连接上来进行多个数据帧的通信，这就是"),a("strong",[t._v("多路复用")]),t._v("的概念。")]),t._v(" "),a("p",[t._v("可能你会有一个疑问，既然是乱序首发，那最后如何来处理这些乱序的数据帧呢？")]),t._v(" "),a("p",[t._v("首先要声明的是，所谓的乱序，指的是不同 ID 的 Stream 是乱序的，但同一个 Stream ID 的帧一定是按顺序传输的。二进制帧到达后对方会将 Stream ID 相同的二进制帧组装成完整的"),a("strong",[t._v("请求报文")]),t._v("和"),a("strong",[t._v("响应报文")]),t._v("。当然，在二进制帧当中还有其他的一些字段，实现了"),a("strong",[t._v("优先级")]),t._v("和"),a("strong",[t._v("流量控制")]),t._v("等功能，我们放到下一节再来介绍。")]),t._v(" "),a("h3",{attrs:{id:"服务器推送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器推送"}},[t._v("#")]),t._v(" 服务器推送")]),t._v(" "),a("p",[t._v("另外值得一说的是 HTTP/2 的服务器推送(Server Push)。在 HTTP/2 当中，服务器已经不再是完全被动地接收请求，响应请求，它也能新建 stream 来给客户端发送消息，当 TCP 连接建立之后，比如浏览器请求一个 HTML 文件，服务器就可以在返回 HTML 的基础上，将 HTML 中引用到的其他资源文件一起返回给客户端，减少客户端的等待。")]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("当然，HTTP/2 新增那么多的特性，是不是 HTTP 的语法要重新学呢？不需要，HTTP/2 完全兼容之前 HTTP 的语法和语义，如"),a("strong",[t._v("请求头、URI、状态码、头部字段")]),t._v("都没有改变，完全不用担心。同时，在安全方面，HTTP 也支持 TLS，并且现在主流的浏览器都公开只支持加密的 HTTP/2, 因此你现在能看到的 HTTP/2 也基本上都是跑在 TLS 上面的了。最后放一张分层图给大家参考:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffdc6783132a5~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"_016-http-2-中的二进制帧是如何设计的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_016-http-2-中的二进制帧是如何设计的"}},[t._v("#")]),t._v(" 016: HTTP/2 中的二进制帧是如何设计的？")]),t._v(" "),a("h3",{attrs:{id:"帧结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帧结构"}},[t._v("#")]),t._v(" 帧结构")]),t._v(" "),a("p",[t._v("HTTP/2 中传输的帧结构如下图所示:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffdc9e9c25e93~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("每个帧分为"),a("code",[t._v("帧头")]),t._v("和"),a("code",[t._v("帧体")]),t._v("。先是三个字节的帧长度，这个长度表示的是"),a("code",[t._v("帧体")]),t._v("的长度。")]),t._v(" "),a("p",[t._v("然后是帧类型，大概可以分为"),a("strong",[t._v("数据帧")]),t._v("和"),a("strong",[t._v("控制帧")]),t._v("两种。数据帧用来存放 HTTP 报文，控制帧用来管理"),a("code",[t._v("流")]),t._v("的传输。")]),t._v(" "),a("p",[t._v("接下来的一个字节是"),a("strong",[t._v("帧标志")]),t._v("，里面一共有 8 个标志位，常用的有 "),a("strong",[t._v("END_HEADERS")]),t._v("表示头数据结束，"),a("strong",[t._v("END_STREAM")]),t._v("表示单方向数据发送结束。")]),t._v(" "),a("p",[t._v("后 4 个字节是"),a("code",[t._v("Stream ID")]),t._v(", 也就是"),a("code",[t._v("流标识符")]),t._v("，有了它，接收方就能从乱序的二进制帧中选择出 ID 相同的帧，按顺序组装成请求/响应报文。")]),t._v(" "),a("h3",{attrs:{id:"流的状态变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流的状态变化"}},[t._v("#")]),t._v(" 流的状态变化")]),t._v(" "),a("p",[t._v("从前面可以知道，在 HTTP/2 中，所谓的"),a("code",[t._v("流")]),t._v("，其实就是二进制帧的"),a("strong",[t._v("双向传输的序列")]),t._v("。那么在 HTTP/2 请求和响应的过程中，流的状态是如何变化的呢？")]),t._v(" "),a("p",[t._v("HTTP/2 其实也是借鉴了 TCP 状态变化的思想，根据帧的标志位来实现具体的状态改变。这里我们以一个普通的"),a("code",[t._v("请求-响应")]),t._v("过程为例来说明：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/22/170ffdcd0abdd1ba~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("最开始两者都是空闲状态，当客户端发送"),a("code",[t._v("Headers帧")]),t._v("后，开始分配"),a("code",[t._v("Stream ID")]),t._v(", 此时客户端的"),a("code",[t._v("流")]),t._v("打开, 服务端接收之后服务端的"),a("code",[t._v("流")]),t._v("也打开，两端的"),a("code",[t._v("流")]),t._v("都打开之后，就可以互相传递数据帧和控制帧了。")]),t._v(" "),a("p",[t._v("当客户端要关闭时，向服务端发送"),a("code",[t._v("END_STREAM")]),t._v("帧，进入"),a("code",[t._v("半关闭状态")]),t._v(", 这个时候客户端只能接收数据，而不能发送数据。")]),t._v(" "),a("p",[t._v("服务端收到这个"),a("code",[t._v("END_STREAM")]),t._v("帧后也进入"),a("code",[t._v("半关闭状态")]),t._v("，不过此时服务端的情况是只能发送数据，而不能接收数据。随后服务端也向客户端发送"),a("code",[t._v("END_STREAM")]),t._v("帧，表示数据发送完毕，双方进入"),a("code",[t._v("关闭状态")]),t._v("。")]),t._v(" "),a("p",[t._v("如果下次要开启新的"),a("code",[t._v("流")]),t._v("，流 ID 需要自增，直到上限为止，到达上限后开一个新的 TCP 连接重头开始计数。由于流 ID 字段长度为 4 个字节，最高位又被保留，因此范围是 0 ~ 2 的 31 次方，大约 21 亿个。")]),t._v(" "),a("h3",{attrs:{id:"流的特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流的特性"}},[t._v("#")]),t._v(" 流的特性")]),t._v(" "),a("p",[t._v("刚刚谈到了流的状态变化过程，这里顺便就来总结一下"),a("code",[t._v("流")]),t._v("传输的特性:")]),t._v(" "),a("ul",[a("li",[t._v("并发性。一个 HTTP/2 连接上可以同时发多个帧，这一点和 HTTP/1 不同。这也是实现"),a("strong",[t._v("多路")]),t._v("复用的基础。")]),t._v(" "),a("li",[t._v("自增性。流 ID 是不可重用的，而是会按顺序递增，达到上限之后又新开 TCP 连接从头开始。")]),t._v(" "),a("li",[t._v("双向性。客户端和服务端都可以创建流，互不干扰，双方都可以作为"),a("code",[t._v("发送方")]),t._v("或者"),a("code",[t._v("接收方")]),t._v("。")]),t._v(" "),a("li",[t._v("可设置优先级。可以设置数据帧的优先级，让服务端先处理重要资源，优化用户体验。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);