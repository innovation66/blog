(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{681:function(t,s,n){"use strict";n.r(s);var a=n(5),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"认识-mixin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#认识-mixin"}},[t._v("#")]),t._v(" 认识 Mixin")]),t._v(" "),n("ul",[n("li",[t._v("目前我们是使用组件化的方式在开发整个 Vue 的应用程序，但是组件和组件之间有时候会存在相同的代码逻辑，我们希望对相同的代码逻辑进行抽取。")]),t._v(" "),n("li",[t._v("在 Vue2 和 Vue3 中都支持的一种方式就是使用 Mixin 来完成：\n"),n("ul",[n("li",[t._v("Mixin 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能；")]),t._v(" "),n("li",[t._v("一个 Mixin 对象可以包含任何组件选项；")]),t._v(" "),n("li",[t._v("当组件使用 Mixin 对象时，所有 Mixin 对象的选项将被 混合 进入该组件本身的选项中；")])])]),t._v(" "),n("li",[n("strong",[t._v("不推荐使用 mixin")])]),t._v(" "),n("li",[t._v("原因：mixin 这个函数是非常霸道的，局部使用还好，如果是全局使用，在项目比较大的时候，个人觉得不是很好")]),t._v(" "),n("li",[t._v("在 vue2 的时候，因为没有组合式 API 这一说法，所以 mixin 对开发人员来说能解决好多事情，但是到了 vue3，这种方式已经不推荐使用了，因为我们在 vue3 中，JS 都是在 setup 里面执行的，这个时候如果我们在外面写一些公共的 JS 文件，然后暴露出来，在需要使用到的组件里面按需引入，这种比 mixin 觉得更好")])]),t._v(" "),n("h3",{attrs:{id:"mixin-的基本使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mixin-的基本使用"}},[t._v("#")]),t._v(" Mixin 的基本使用")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("目录结构")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20220802113135424.png",alt:"image-20220802113135424"}})])]),t._v(" "),n("li",[n("p",[t._v("使用")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" messageMixin "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../mixins/message.mixin"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("mixins")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("messageMixin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])])])]),t._v(" "),n("h3",{attrs:{id:"mixin-的合并规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mixin-的合并规则"}},[t._v("#")]),t._v(" Mixin 的合并规则")]),t._v(" "),n("ul",[n("li",[t._v("如果 Mixin 对象中的选项和组件对象中的选项发生了冲突，那么 Vue 会如何操作呢？\n"),n("ul",[n("li",[t._v("这里分成不同的情况来进行处理；")])])]),t._v(" "),n("li",[t._v("情况一：如果是 data 函数的返回值对象\n"),n("ul",[n("li",[t._v("返回值对象默认情况下会进行合并；")]),t._v(" "),n("li",[t._v("如果 data 返回值对象的属性发生了冲突，那么会保留组件自身的数据；")])])]),t._v(" "),n("li",[t._v("情况二：如何生命周期钩子函数\n"),n("ul",[n("li",[t._v("生命周期的钩子函数会被合并到数组中，都会被调用；")])])]),t._v(" "),n("li",[t._v("情况三：值为对象的选项，例如 methods、components 和 directives，将被合并为同一个对象。\n"),n("ul",[n("li",[t._v("比如都有 methods 选项，并且都定义了方法，那么它们都会生效；")]),t._v(" "),n("li",[t._v("但是如果对象的 key 相同，那么会取组件对象的键值对；")])])])]),t._v(" "),n("h3",{attrs:{id:"全局混入-mixin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局混入-mixin"}},[t._v("#")]),t._v(" 全局混入 Mixin")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("如果组件中的某些选项，是所有的组件都需要拥有的，那么这个时候我们可以使用全局的 mixin：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("全局的 Mixin 可以使用 应用 app 的方法 mixin 来完成注册；")])]),t._v(" "),n("li",[n("p",[t._v("一旦注册，那么全局混入的选项将会影响每一个组件；")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mixin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global mixin created"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#app"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])])])])])]),t._v(" "),n("h3",{attrs:{id:"externds"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#externds"}},[t._v("#")]),t._v(" externds")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("另外一个类似与 Mixin 的方式是通过 extends 属性")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("允许声明拓展另外一个组件，类似与 Mixins；")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/innovation66/picgo/main/image-20210825090609046.png",alt:"image-20210825090609046"}})])])])]),t._v(" "),n("li",[n("p",[t._v("在开发中 extends 用的非常少，在 Vue2 中比较推荐大家使用 Mixin，而且在 Vue3 中推荐使用 Composition API")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);